// Generated by view binder compiler. Do not edit!
package com.isansys.pse_isansysportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.RadioGroup;
import android.widget.SeekBar;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.isansys.pse_isansysportal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DummyDataModeBinding implements ViewBinding {
  @NonNull
  private final TableLayout rootView;

  @NonNull
  public final Button buttonAddBloodPressure;

  @NonNull
  public final Button buttonAddDummyEarlyWarningScores;

  @NonNull
  public final Button buttonAddLifetemp;

  @NonNull
  public final Button buttonAddLifetouch;

  @NonNull
  public final Button buttonAddNoninWristOxBle;

  @NonNull
  public final Button buttonAddPulseOx;

  @NonNull
  public final Button buttonAddWeightScale;

  @NonNull
  public final Button buttonBloodPressureSimulateConnectionState;

  @NonNull
  public final Button buttonCreateNewPatient;

  @NonNull
  public final Button buttonLifetempSimulateConnectionState;

  @NonNull
  public final Button buttonLifetouchSimulateConnectionState;

  @NonNull
  public final Button buttonNoninWristOxBleSimulateConnectionState;

  @NonNull
  public final Button buttonNoninWristOxSimulateConnectionState;

  @NonNull
  public final Button buttonRemoveBloodPressure;

  @NonNull
  public final Button buttonRemoveDummyEarlyWarningScores;

  @NonNull
  public final Button buttonRemoveLifetemp;

  @NonNull
  public final Button buttonRemoveLifetouch;

  @NonNull
  public final Button buttonRemoveNoninWristOx;

  @NonNull
  public final Button buttonRemoveNoninWristOxBle;

  @NonNull
  public final Button buttonRemoveWeightScale;

  @NonNull
  public final Button buttonStartPatientSession;

  @NonNull
  public final Button buttonStopPatientSession;

  @NonNull
  public final Button buttonWeightScaleSimulateConnectionState;

  @NonNull
  public final CheckBox checkBoxLifetempLeadsOff;

  @NonNull
  public final CheckBox checkBoxLifetouchLeadsOff;

  @NonNull
  public final CheckBox checkBoxNoninWristOxBleFingerOff;

  @NonNull
  public final CheckBox checkBoxPulseOxFingerOff;

  @NonNull
  public final CheckBox checkBoxSpoofBackfillSession;

  @NonNull
  public final CheckBox checkBoxSpoofEarlyWarningScores;

  @NonNull
  public final RadioGroup radioGroupPatientAge;

  @NonNull
  public final SeekBar seekBarDummyDataModeMeasurementPerTick;

  @NonNull
  public final SeekBar seekBarNumberOfHoursToBackfill;

  @NonNull
  public final TableRow tableRowBloodPressure;

  @NonNull
  public final TableRow tableRowEarlyWarningScores;

  @NonNull
  public final TableRow tableRowLifetemp;

  @NonNull
  public final TableRow tableRowLifetouch;

  @NonNull
  public final TableRow tableRowNoninWristOxBle;

  @NonNull
  public final TableRow tableRowPatientDetails;

  @NonNull
  public final TableRow tableRowPatientSession;

  @NonNull
  public final TableRow tableRowPulseOx;

  @NonNull
  public final TableRow tableRowWeightScale;

  @NonNull
  public final TextView textBloodPressureDiastolicMeasurement;

  @NonNull
  public final TextView textBloodPressureMeasurementTimestamp;

  @NonNull
  public final TextView textBloodPressureSystolicMeasurement;

  @NonNull
  public final TextView textCreatedPatientName;

  @NonNull
  public final TextView textEarlyWarningScoresMeasurement;

  @NonNull
  public final TextView textEarlyWarningScoresMeasurementTimestamp;

  @NonNull
  public final TextView textEarlyWarningScoresOutOf;

  @NonNull
  public final TextView textHeartAndRespirationRateMeasurementTimestamp;

  @NonNull
  public final TextView textHeartRateMeasurement;

  @NonNull
  public final TextView textNoninWristOxBleMeasurement;

  @NonNull
  public final TextView textNoninWristOxBleMeasurementTimestamp;

  @NonNull
  public final TextView textPulseOxMeasurement;

  @NonNull
  public final TextView textPulseOxMeasurementTimestamp;

  @NonNull
  public final TextView textTemperatureMeasurement;

  @NonNull
  public final TextView textTemperatureMeasurementTimestamp;

  @NonNull
  public final TextView textView1;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textViewDummyDataModeMeasurementPerTick;

  @NonNull
  public final TextView textViewDummyDataModeMeasurementPerTickDescription;

  @NonNull
  public final TextView textViewNoninWristOxBle;

  @NonNull
  public final TextView textViewNumberOfHoursToBackfill;

  @NonNull
  public final TextView textViewNumberOfHoursToBackfillDescription;

  @NonNull
  public final TextView textViewRespirationRateMeasurement;

  @NonNull
  public final TextView textWeightScaleWeightMeasurement;

  @NonNull
  public final TextView textWeightScaleWeightMeasurementTimestamp;

  private DummyDataModeBinding(@NonNull TableLayout rootView,
      @NonNull Button buttonAddBloodPressure, @NonNull Button buttonAddDummyEarlyWarningScores,
      @NonNull Button buttonAddLifetemp, @NonNull Button buttonAddLifetouch,
      @NonNull Button buttonAddNoninWristOxBle, @NonNull Button buttonAddPulseOx,
      @NonNull Button buttonAddWeightScale,
      @NonNull Button buttonBloodPressureSimulateConnectionState,
      @NonNull Button buttonCreateNewPatient, @NonNull Button buttonLifetempSimulateConnectionState,
      @NonNull Button buttonLifetouchSimulateConnectionState,
      @NonNull Button buttonNoninWristOxBleSimulateConnectionState,
      @NonNull Button buttonNoninWristOxSimulateConnectionState,
      @NonNull Button buttonRemoveBloodPressure,
      @NonNull Button buttonRemoveDummyEarlyWarningScores, @NonNull Button buttonRemoveLifetemp,
      @NonNull Button buttonRemoveLifetouch, @NonNull Button buttonRemoveNoninWristOx,
      @NonNull Button buttonRemoveNoninWristOxBle, @NonNull Button buttonRemoveWeightScale,
      @NonNull Button buttonStartPatientSession, @NonNull Button buttonStopPatientSession,
      @NonNull Button buttonWeightScaleSimulateConnectionState,
      @NonNull CheckBox checkBoxLifetempLeadsOff, @NonNull CheckBox checkBoxLifetouchLeadsOff,
      @NonNull CheckBox checkBoxNoninWristOxBleFingerOff,
      @NonNull CheckBox checkBoxPulseOxFingerOff, @NonNull CheckBox checkBoxSpoofBackfillSession,
      @NonNull CheckBox checkBoxSpoofEarlyWarningScores, @NonNull RadioGroup radioGroupPatientAge,
      @NonNull SeekBar seekBarDummyDataModeMeasurementPerTick,
      @NonNull SeekBar seekBarNumberOfHoursToBackfill, @NonNull TableRow tableRowBloodPressure,
      @NonNull TableRow tableRowEarlyWarningScores, @NonNull TableRow tableRowLifetemp,
      @NonNull TableRow tableRowLifetouch, @NonNull TableRow tableRowNoninWristOxBle,
      @NonNull TableRow tableRowPatientDetails, @NonNull TableRow tableRowPatientSession,
      @NonNull TableRow tableRowPulseOx, @NonNull TableRow tableRowWeightScale,
      @NonNull TextView textBloodPressureDiastolicMeasurement,
      @NonNull TextView textBloodPressureMeasurementTimestamp,
      @NonNull TextView textBloodPressureSystolicMeasurement,
      @NonNull TextView textCreatedPatientName, @NonNull TextView textEarlyWarningScoresMeasurement,
      @NonNull TextView textEarlyWarningScoresMeasurementTimestamp,
      @NonNull TextView textEarlyWarningScoresOutOf,
      @NonNull TextView textHeartAndRespirationRateMeasurementTimestamp,
      @NonNull TextView textHeartRateMeasurement, @NonNull TextView textNoninWristOxBleMeasurement,
      @NonNull TextView textNoninWristOxBleMeasurementTimestamp,
      @NonNull TextView textPulseOxMeasurement, @NonNull TextView textPulseOxMeasurementTimestamp,
      @NonNull TextView textTemperatureMeasurement,
      @NonNull TextView textTemperatureMeasurementTimestamp, @NonNull TextView textView1,
      @NonNull TextView textView2, @NonNull TextView textView3,
      @NonNull TextView textViewDummyDataModeMeasurementPerTick,
      @NonNull TextView textViewDummyDataModeMeasurementPerTickDescription,
      @NonNull TextView textViewNoninWristOxBle, @NonNull TextView textViewNumberOfHoursToBackfill,
      @NonNull TextView textViewNumberOfHoursToBackfillDescription,
      @NonNull TextView textViewRespirationRateMeasurement,
      @NonNull TextView textWeightScaleWeightMeasurement,
      @NonNull TextView textWeightScaleWeightMeasurementTimestamp) {
    this.rootView = rootView;
    this.buttonAddBloodPressure = buttonAddBloodPressure;
    this.buttonAddDummyEarlyWarningScores = buttonAddDummyEarlyWarningScores;
    this.buttonAddLifetemp = buttonAddLifetemp;
    this.buttonAddLifetouch = buttonAddLifetouch;
    this.buttonAddNoninWristOxBle = buttonAddNoninWristOxBle;
    this.buttonAddPulseOx = buttonAddPulseOx;
    this.buttonAddWeightScale = buttonAddWeightScale;
    this.buttonBloodPressureSimulateConnectionState = buttonBloodPressureSimulateConnectionState;
    this.buttonCreateNewPatient = buttonCreateNewPatient;
    this.buttonLifetempSimulateConnectionState = buttonLifetempSimulateConnectionState;
    this.buttonLifetouchSimulateConnectionState = buttonLifetouchSimulateConnectionState;
    this.buttonNoninWristOxBleSimulateConnectionState = buttonNoninWristOxBleSimulateConnectionState;
    this.buttonNoninWristOxSimulateConnectionState = buttonNoninWristOxSimulateConnectionState;
    this.buttonRemoveBloodPressure = buttonRemoveBloodPressure;
    this.buttonRemoveDummyEarlyWarningScores = buttonRemoveDummyEarlyWarningScores;
    this.buttonRemoveLifetemp = buttonRemoveLifetemp;
    this.buttonRemoveLifetouch = buttonRemoveLifetouch;
    this.buttonRemoveNoninWristOx = buttonRemoveNoninWristOx;
    this.buttonRemoveNoninWristOxBle = buttonRemoveNoninWristOxBle;
    this.buttonRemoveWeightScale = buttonRemoveWeightScale;
    this.buttonStartPatientSession = buttonStartPatientSession;
    this.buttonStopPatientSession = buttonStopPatientSession;
    this.buttonWeightScaleSimulateConnectionState = buttonWeightScaleSimulateConnectionState;
    this.checkBoxLifetempLeadsOff = checkBoxLifetempLeadsOff;
    this.checkBoxLifetouchLeadsOff = checkBoxLifetouchLeadsOff;
    this.checkBoxNoninWristOxBleFingerOff = checkBoxNoninWristOxBleFingerOff;
    this.checkBoxPulseOxFingerOff = checkBoxPulseOxFingerOff;
    this.checkBoxSpoofBackfillSession = checkBoxSpoofBackfillSession;
    this.checkBoxSpoofEarlyWarningScores = checkBoxSpoofEarlyWarningScores;
    this.radioGroupPatientAge = radioGroupPatientAge;
    this.seekBarDummyDataModeMeasurementPerTick = seekBarDummyDataModeMeasurementPerTick;
    this.seekBarNumberOfHoursToBackfill = seekBarNumberOfHoursToBackfill;
    this.tableRowBloodPressure = tableRowBloodPressure;
    this.tableRowEarlyWarningScores = tableRowEarlyWarningScores;
    this.tableRowLifetemp = tableRowLifetemp;
    this.tableRowLifetouch = tableRowLifetouch;
    this.tableRowNoninWristOxBle = tableRowNoninWristOxBle;
    this.tableRowPatientDetails = tableRowPatientDetails;
    this.tableRowPatientSession = tableRowPatientSession;
    this.tableRowPulseOx = tableRowPulseOx;
    this.tableRowWeightScale = tableRowWeightScale;
    this.textBloodPressureDiastolicMeasurement = textBloodPressureDiastolicMeasurement;
    this.textBloodPressureMeasurementTimestamp = textBloodPressureMeasurementTimestamp;
    this.textBloodPressureSystolicMeasurement = textBloodPressureSystolicMeasurement;
    this.textCreatedPatientName = textCreatedPatientName;
    this.textEarlyWarningScoresMeasurement = textEarlyWarningScoresMeasurement;
    this.textEarlyWarningScoresMeasurementTimestamp = textEarlyWarningScoresMeasurementTimestamp;
    this.textEarlyWarningScoresOutOf = textEarlyWarningScoresOutOf;
    this.textHeartAndRespirationRateMeasurementTimestamp = textHeartAndRespirationRateMeasurementTimestamp;
    this.textHeartRateMeasurement = textHeartRateMeasurement;
    this.textNoninWristOxBleMeasurement = textNoninWristOxBleMeasurement;
    this.textNoninWristOxBleMeasurementTimestamp = textNoninWristOxBleMeasurementTimestamp;
    this.textPulseOxMeasurement = textPulseOxMeasurement;
    this.textPulseOxMeasurementTimestamp = textPulseOxMeasurementTimestamp;
    this.textTemperatureMeasurement = textTemperatureMeasurement;
    this.textTemperatureMeasurementTimestamp = textTemperatureMeasurementTimestamp;
    this.textView1 = textView1;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.textViewDummyDataModeMeasurementPerTick = textViewDummyDataModeMeasurementPerTick;
    this.textViewDummyDataModeMeasurementPerTickDescription = textViewDummyDataModeMeasurementPerTickDescription;
    this.textViewNoninWristOxBle = textViewNoninWristOxBle;
    this.textViewNumberOfHoursToBackfill = textViewNumberOfHoursToBackfill;
    this.textViewNumberOfHoursToBackfillDescription = textViewNumberOfHoursToBackfillDescription;
    this.textViewRespirationRateMeasurement = textViewRespirationRateMeasurement;
    this.textWeightScaleWeightMeasurement = textWeightScaleWeightMeasurement;
    this.textWeightScaleWeightMeasurementTimestamp = textWeightScaleWeightMeasurementTimestamp;
  }

  @Override
  @NonNull
  public TableLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DummyDataModeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DummyDataModeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dummy_data_mode, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DummyDataModeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAddBloodPressure;
      Button buttonAddBloodPressure = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddBloodPressure == null) {
        break missingId;
      }

      id = R.id.buttonAddDummyEarlyWarningScores;
      Button buttonAddDummyEarlyWarningScores = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddDummyEarlyWarningScores == null) {
        break missingId;
      }

      id = R.id.buttonAddLifetemp;
      Button buttonAddLifetemp = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddLifetemp == null) {
        break missingId;
      }

      id = R.id.buttonAddLifetouch;
      Button buttonAddLifetouch = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddLifetouch == null) {
        break missingId;
      }

      id = R.id.buttonAddNoninWristOxBle;
      Button buttonAddNoninWristOxBle = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddNoninWristOxBle == null) {
        break missingId;
      }

      id = R.id.buttonAddPulseOx;
      Button buttonAddPulseOx = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddPulseOx == null) {
        break missingId;
      }

      id = R.id.buttonAddWeightScale;
      Button buttonAddWeightScale = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddWeightScale == null) {
        break missingId;
      }

      id = R.id.buttonBloodPressureSimulateConnectionState;
      Button buttonBloodPressureSimulateConnectionState = ViewBindings.findChildViewById(rootView, id);
      if (buttonBloodPressureSimulateConnectionState == null) {
        break missingId;
      }

      id = R.id.buttonCreateNewPatient;
      Button buttonCreateNewPatient = ViewBindings.findChildViewById(rootView, id);
      if (buttonCreateNewPatient == null) {
        break missingId;
      }

      id = R.id.buttonLifetempSimulateConnectionState;
      Button buttonLifetempSimulateConnectionState = ViewBindings.findChildViewById(rootView, id);
      if (buttonLifetempSimulateConnectionState == null) {
        break missingId;
      }

      id = R.id.buttonLifetouchSimulateConnectionState;
      Button buttonLifetouchSimulateConnectionState = ViewBindings.findChildViewById(rootView, id);
      if (buttonLifetouchSimulateConnectionState == null) {
        break missingId;
      }

      id = R.id.buttonNoninWristOxBleSimulateConnectionState;
      Button buttonNoninWristOxBleSimulateConnectionState = ViewBindings.findChildViewById(rootView, id);
      if (buttonNoninWristOxBleSimulateConnectionState == null) {
        break missingId;
      }

      id = R.id.buttonNoninWristOxSimulateConnectionState;
      Button buttonNoninWristOxSimulateConnectionState = ViewBindings.findChildViewById(rootView, id);
      if (buttonNoninWristOxSimulateConnectionState == null) {
        break missingId;
      }

      id = R.id.buttonRemoveBloodPressure;
      Button buttonRemoveBloodPressure = ViewBindings.findChildViewById(rootView, id);
      if (buttonRemoveBloodPressure == null) {
        break missingId;
      }

      id = R.id.buttonRemoveDummyEarlyWarningScores;
      Button buttonRemoveDummyEarlyWarningScores = ViewBindings.findChildViewById(rootView, id);
      if (buttonRemoveDummyEarlyWarningScores == null) {
        break missingId;
      }

      id = R.id.buttonRemoveLifetemp;
      Button buttonRemoveLifetemp = ViewBindings.findChildViewById(rootView, id);
      if (buttonRemoveLifetemp == null) {
        break missingId;
      }

      id = R.id.buttonRemoveLifetouch;
      Button buttonRemoveLifetouch = ViewBindings.findChildViewById(rootView, id);
      if (buttonRemoveLifetouch == null) {
        break missingId;
      }

      id = R.id.buttonRemoveNoninWristOx;
      Button buttonRemoveNoninWristOx = ViewBindings.findChildViewById(rootView, id);
      if (buttonRemoveNoninWristOx == null) {
        break missingId;
      }

      id = R.id.buttonRemoveNoninWristOxBle;
      Button buttonRemoveNoninWristOxBle = ViewBindings.findChildViewById(rootView, id);
      if (buttonRemoveNoninWristOxBle == null) {
        break missingId;
      }

      id = R.id.buttonRemoveWeightScale;
      Button buttonRemoveWeightScale = ViewBindings.findChildViewById(rootView, id);
      if (buttonRemoveWeightScale == null) {
        break missingId;
      }

      id = R.id.buttonStartPatientSession;
      Button buttonStartPatientSession = ViewBindings.findChildViewById(rootView, id);
      if (buttonStartPatientSession == null) {
        break missingId;
      }

      id = R.id.buttonStopPatientSession;
      Button buttonStopPatientSession = ViewBindings.findChildViewById(rootView, id);
      if (buttonStopPatientSession == null) {
        break missingId;
      }

      id = R.id.buttonWeightScaleSimulateConnectionState;
      Button buttonWeightScaleSimulateConnectionState = ViewBindings.findChildViewById(rootView, id);
      if (buttonWeightScaleSimulateConnectionState == null) {
        break missingId;
      }

      id = R.id.checkBoxLifetempLeadsOff;
      CheckBox checkBoxLifetempLeadsOff = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxLifetempLeadsOff == null) {
        break missingId;
      }

      id = R.id.checkBoxLifetouchLeadsOff;
      CheckBox checkBoxLifetouchLeadsOff = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxLifetouchLeadsOff == null) {
        break missingId;
      }

      id = R.id.checkBoxNoninWristOxBleFingerOff;
      CheckBox checkBoxNoninWristOxBleFingerOff = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxNoninWristOxBleFingerOff == null) {
        break missingId;
      }

      id = R.id.checkBoxPulseOxFingerOff;
      CheckBox checkBoxPulseOxFingerOff = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxPulseOxFingerOff == null) {
        break missingId;
      }

      id = R.id.checkBoxSpoofBackfillSession;
      CheckBox checkBoxSpoofBackfillSession = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxSpoofBackfillSession == null) {
        break missingId;
      }

      id = R.id.checkBoxSpoofEarlyWarningScores;
      CheckBox checkBoxSpoofEarlyWarningScores = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxSpoofEarlyWarningScores == null) {
        break missingId;
      }

      id = R.id.radioGroupPatientAge;
      RadioGroup radioGroupPatientAge = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupPatientAge == null) {
        break missingId;
      }

      id = R.id.seekBarDummyDataModeMeasurementPerTick;
      SeekBar seekBarDummyDataModeMeasurementPerTick = ViewBindings.findChildViewById(rootView, id);
      if (seekBarDummyDataModeMeasurementPerTick == null) {
        break missingId;
      }

      id = R.id.seekBarNumberOfHoursToBackfill;
      SeekBar seekBarNumberOfHoursToBackfill = ViewBindings.findChildViewById(rootView, id);
      if (seekBarNumberOfHoursToBackfill == null) {
        break missingId;
      }

      id = R.id.tableRowBloodPressure;
      TableRow tableRowBloodPressure = ViewBindings.findChildViewById(rootView, id);
      if (tableRowBloodPressure == null) {
        break missingId;
      }

      id = R.id.tableRowEarlyWarningScores;
      TableRow tableRowEarlyWarningScores = ViewBindings.findChildViewById(rootView, id);
      if (tableRowEarlyWarningScores == null) {
        break missingId;
      }

      id = R.id.tableRowLifetemp;
      TableRow tableRowLifetemp = ViewBindings.findChildViewById(rootView, id);
      if (tableRowLifetemp == null) {
        break missingId;
      }

      id = R.id.tableRowLifetouch;
      TableRow tableRowLifetouch = ViewBindings.findChildViewById(rootView, id);
      if (tableRowLifetouch == null) {
        break missingId;
      }

      id = R.id.tableRowNoninWristOxBle;
      TableRow tableRowNoninWristOxBle = ViewBindings.findChildViewById(rootView, id);
      if (tableRowNoninWristOxBle == null) {
        break missingId;
      }

      id = R.id.tableRowPatientDetails;
      TableRow tableRowPatientDetails = ViewBindings.findChildViewById(rootView, id);
      if (tableRowPatientDetails == null) {
        break missingId;
      }

      id = R.id.tableRowPatientSession;
      TableRow tableRowPatientSession = ViewBindings.findChildViewById(rootView, id);
      if (tableRowPatientSession == null) {
        break missingId;
      }

      id = R.id.tableRowPulseOx;
      TableRow tableRowPulseOx = ViewBindings.findChildViewById(rootView, id);
      if (tableRowPulseOx == null) {
        break missingId;
      }

      id = R.id.tableRowWeightScale;
      TableRow tableRowWeightScale = ViewBindings.findChildViewById(rootView, id);
      if (tableRowWeightScale == null) {
        break missingId;
      }

      id = R.id.textBloodPressureDiastolicMeasurement;
      TextView textBloodPressureDiastolicMeasurement = ViewBindings.findChildViewById(rootView, id);
      if (textBloodPressureDiastolicMeasurement == null) {
        break missingId;
      }

      id = R.id.textBloodPressureMeasurementTimestamp;
      TextView textBloodPressureMeasurementTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (textBloodPressureMeasurementTimestamp == null) {
        break missingId;
      }

      id = R.id.textBloodPressureSystolicMeasurement;
      TextView textBloodPressureSystolicMeasurement = ViewBindings.findChildViewById(rootView, id);
      if (textBloodPressureSystolicMeasurement == null) {
        break missingId;
      }

      id = R.id.textCreatedPatientName;
      TextView textCreatedPatientName = ViewBindings.findChildViewById(rootView, id);
      if (textCreatedPatientName == null) {
        break missingId;
      }

      id = R.id.textEarlyWarningScoresMeasurement;
      TextView textEarlyWarningScoresMeasurement = ViewBindings.findChildViewById(rootView, id);
      if (textEarlyWarningScoresMeasurement == null) {
        break missingId;
      }

      id = R.id.textEarlyWarningScoresMeasurementTimestamp;
      TextView textEarlyWarningScoresMeasurementTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (textEarlyWarningScoresMeasurementTimestamp == null) {
        break missingId;
      }

      id = R.id.textEarlyWarningScoresOutOf;
      TextView textEarlyWarningScoresOutOf = ViewBindings.findChildViewById(rootView, id);
      if (textEarlyWarningScoresOutOf == null) {
        break missingId;
      }

      id = R.id.textHeartAndRespirationRateMeasurementTimestamp;
      TextView textHeartAndRespirationRateMeasurementTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (textHeartAndRespirationRateMeasurementTimestamp == null) {
        break missingId;
      }

      id = R.id.textHeartRateMeasurement;
      TextView textHeartRateMeasurement = ViewBindings.findChildViewById(rootView, id);
      if (textHeartRateMeasurement == null) {
        break missingId;
      }

      id = R.id.textNoninWristOxBleMeasurement;
      TextView textNoninWristOxBleMeasurement = ViewBindings.findChildViewById(rootView, id);
      if (textNoninWristOxBleMeasurement == null) {
        break missingId;
      }

      id = R.id.textNoninWristOxBleMeasurementTimestamp;
      TextView textNoninWristOxBleMeasurementTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (textNoninWristOxBleMeasurementTimestamp == null) {
        break missingId;
      }

      id = R.id.textPulseOxMeasurement;
      TextView textPulseOxMeasurement = ViewBindings.findChildViewById(rootView, id);
      if (textPulseOxMeasurement == null) {
        break missingId;
      }

      id = R.id.textPulseOxMeasurementTimestamp;
      TextView textPulseOxMeasurementTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (textPulseOxMeasurementTimestamp == null) {
        break missingId;
      }

      id = R.id.textTemperatureMeasurement;
      TextView textTemperatureMeasurement = ViewBindings.findChildViewById(rootView, id);
      if (textTemperatureMeasurement == null) {
        break missingId;
      }

      id = R.id.textTemperatureMeasurementTimestamp;
      TextView textTemperatureMeasurementTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (textTemperatureMeasurementTimestamp == null) {
        break missingId;
      }

      id = R.id.textView1;
      TextView textView1 = ViewBindings.findChildViewById(rootView, id);
      if (textView1 == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textViewDummyDataModeMeasurementPerTick;
      TextView textViewDummyDataModeMeasurementPerTick = ViewBindings.findChildViewById(rootView, id);
      if (textViewDummyDataModeMeasurementPerTick == null) {
        break missingId;
      }

      id = R.id.textViewDummyDataModeMeasurementPerTickDescription;
      TextView textViewDummyDataModeMeasurementPerTickDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewDummyDataModeMeasurementPerTickDescription == null) {
        break missingId;
      }

      id = R.id.textViewNoninWristOxBle;
      TextView textViewNoninWristOxBle = ViewBindings.findChildViewById(rootView, id);
      if (textViewNoninWristOxBle == null) {
        break missingId;
      }

      id = R.id.textViewNumberOfHoursToBackfill;
      TextView textViewNumberOfHoursToBackfill = ViewBindings.findChildViewById(rootView, id);
      if (textViewNumberOfHoursToBackfill == null) {
        break missingId;
      }

      id = R.id.textViewNumberOfHoursToBackfillDescription;
      TextView textViewNumberOfHoursToBackfillDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewNumberOfHoursToBackfillDescription == null) {
        break missingId;
      }

      id = R.id.textViewRespirationRateMeasurement;
      TextView textViewRespirationRateMeasurement = ViewBindings.findChildViewById(rootView, id);
      if (textViewRespirationRateMeasurement == null) {
        break missingId;
      }

      id = R.id.textWeightScaleWeightMeasurement;
      TextView textWeightScaleWeightMeasurement = ViewBindings.findChildViewById(rootView, id);
      if (textWeightScaleWeightMeasurement == null) {
        break missingId;
      }

      id = R.id.textWeightScaleWeightMeasurementTimestamp;
      TextView textWeightScaleWeightMeasurementTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (textWeightScaleWeightMeasurementTimestamp == null) {
        break missingId;
      }

      return new DummyDataModeBinding((TableLayout) rootView, buttonAddBloodPressure,
          buttonAddDummyEarlyWarningScores, buttonAddLifetemp, buttonAddLifetouch,
          buttonAddNoninWristOxBle, buttonAddPulseOx, buttonAddWeightScale,
          buttonBloodPressureSimulateConnectionState, buttonCreateNewPatient,
          buttonLifetempSimulateConnectionState, buttonLifetouchSimulateConnectionState,
          buttonNoninWristOxBleSimulateConnectionState, buttonNoninWristOxSimulateConnectionState,
          buttonRemoveBloodPressure, buttonRemoveDummyEarlyWarningScores, buttonRemoveLifetemp,
          buttonRemoveLifetouch, buttonRemoveNoninWristOx, buttonRemoveNoninWristOxBle,
          buttonRemoveWeightScale, buttonStartPatientSession, buttonStopPatientSession,
          buttonWeightScaleSimulateConnectionState, checkBoxLifetempLeadsOff,
          checkBoxLifetouchLeadsOff, checkBoxNoninWristOxBleFingerOff, checkBoxPulseOxFingerOff,
          checkBoxSpoofBackfillSession, checkBoxSpoofEarlyWarningScores, radioGroupPatientAge,
          seekBarDummyDataModeMeasurementPerTick, seekBarNumberOfHoursToBackfill,
          tableRowBloodPressure, tableRowEarlyWarningScores, tableRowLifetemp, tableRowLifetouch,
          tableRowNoninWristOxBle, tableRowPatientDetails, tableRowPatientSession, tableRowPulseOx,
          tableRowWeightScale, textBloodPressureDiastolicMeasurement,
          textBloodPressureMeasurementTimestamp, textBloodPressureSystolicMeasurement,
          textCreatedPatientName, textEarlyWarningScoresMeasurement,
          textEarlyWarningScoresMeasurementTimestamp, textEarlyWarningScoresOutOf,
          textHeartAndRespirationRateMeasurementTimestamp, textHeartRateMeasurement,
          textNoninWristOxBleMeasurement, textNoninWristOxBleMeasurementTimestamp,
          textPulseOxMeasurement, textPulseOxMeasurementTimestamp, textTemperatureMeasurement,
          textTemperatureMeasurementTimestamp, textView1, textView2, textView3,
          textViewDummyDataModeMeasurementPerTick,
          textViewDummyDataModeMeasurementPerTickDescription, textViewNoninWristOxBle,
          textViewNumberOfHoursToBackfill, textViewNumberOfHoursToBackfillDescription,
          textViewRespirationRateMeasurement, textWeightScaleWeightMeasurement,
          textWeightScaleWeightMeasurementTimestamp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
