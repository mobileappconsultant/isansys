// Generated by view binder compiler. Do not edit!
package com.isansys.pse_isansysportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.akexorcist.roundcornerprogressbar.RoundCornerProgressBar;
import com.isansys.pse_isansysportal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DeviceConnectionBloodPressureBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonBloodPressureCancelSearchOrSearchAgain;

  @NonNull
  public final LinearLayout linearLayoutDeviceConnectionBloodPressure;

  @NonNull
  public final ImageView logoBloodPressure;

  @NonNull
  public final RoundCornerProgressBar progressBarBloodPressureConnection;

  @NonNull
  public final TextView textViewBloodPressure;

  @NonNull
  public final TextView textViewBloodPressureSearchStatus;

  @NonNull
  public final TextView textViewDeviceConnectionBloodPressureHumanReadableSerialNumber;

  private DeviceConnectionBloodPressureBinding(@NonNull LinearLayout rootView,
      @NonNull Button buttonBloodPressureCancelSearchOrSearchAgain,
      @NonNull LinearLayout linearLayoutDeviceConnectionBloodPressure,
      @NonNull ImageView logoBloodPressure,
      @NonNull RoundCornerProgressBar progressBarBloodPressureConnection,
      @NonNull TextView textViewBloodPressure, @NonNull TextView textViewBloodPressureSearchStatus,
      @NonNull TextView textViewDeviceConnectionBloodPressureHumanReadableSerialNumber) {
    this.rootView = rootView;
    this.buttonBloodPressureCancelSearchOrSearchAgain = buttonBloodPressureCancelSearchOrSearchAgain;
    this.linearLayoutDeviceConnectionBloodPressure = linearLayoutDeviceConnectionBloodPressure;
    this.logoBloodPressure = logoBloodPressure;
    this.progressBarBloodPressureConnection = progressBarBloodPressureConnection;
    this.textViewBloodPressure = textViewBloodPressure;
    this.textViewBloodPressureSearchStatus = textViewBloodPressureSearchStatus;
    this.textViewDeviceConnectionBloodPressureHumanReadableSerialNumber = textViewDeviceConnectionBloodPressureHumanReadableSerialNumber;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DeviceConnectionBloodPressureBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DeviceConnectionBloodPressureBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.device_connection__blood_pressure, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DeviceConnectionBloodPressureBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonBloodPressureCancelSearchOrSearchAgain;
      Button buttonBloodPressureCancelSearchOrSearchAgain = ViewBindings.findChildViewById(rootView, id);
      if (buttonBloodPressureCancelSearchOrSearchAgain == null) {
        break missingId;
      }

      LinearLayout linearLayoutDeviceConnectionBloodPressure = (LinearLayout) rootView;

      id = R.id.logo_blood_pressure;
      ImageView logoBloodPressure = ViewBindings.findChildViewById(rootView, id);
      if (logoBloodPressure == null) {
        break missingId;
      }

      id = R.id.progressBarBloodPressureConnection;
      RoundCornerProgressBar progressBarBloodPressureConnection = ViewBindings.findChildViewById(rootView, id);
      if (progressBarBloodPressureConnection == null) {
        break missingId;
      }

      id = R.id.textViewBloodPressure;
      TextView textViewBloodPressure = ViewBindings.findChildViewById(rootView, id);
      if (textViewBloodPressure == null) {
        break missingId;
      }

      id = R.id.textViewBloodPressureSearchStatus;
      TextView textViewBloodPressureSearchStatus = ViewBindings.findChildViewById(rootView, id);
      if (textViewBloodPressureSearchStatus == null) {
        break missingId;
      }

      id = R.id.textViewDeviceConnectionBloodPressureHumanReadableSerialNumber;
      TextView textViewDeviceConnectionBloodPressureHumanReadableSerialNumber = ViewBindings.findChildViewById(rootView, id);
      if (textViewDeviceConnectionBloodPressureHumanReadableSerialNumber == null) {
        break missingId;
      }

      return new DeviceConnectionBloodPressureBinding((LinearLayout) rootView,
          buttonBloodPressureCancelSearchOrSearchAgain, linearLayoutDeviceConnectionBloodPressure,
          logoBloodPressure, progressBarBloodPressureConnection, textViewBloodPressure,
          textViewBloodPressureSearchStatus,
          textViewDeviceConnectionBloodPressureHumanReadableSerialNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
