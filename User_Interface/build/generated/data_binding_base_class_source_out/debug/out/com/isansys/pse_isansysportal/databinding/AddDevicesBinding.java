// Generated by view binder compiler. Do not edit!
package com.isansys.pse_isansysportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.isansys.pse_isansysportal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddDevicesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonAddEarlyWarningScore;

  @NonNull
  public final Button buttonGrayedOutAddEarlyWarningScore;

  @NonNull
  public final Button buttonGrayedOutRemoveEarlyWarningScore;

  @NonNull
  public final Button buttonManualVitalsOnly;

  @NonNull
  public final Button buttonRemoveBloodPressure;

  @NonNull
  public final Button buttonRemoveEarlyWarningScore;

  @NonNull
  public final Button buttonRemoveLifetouch;

  @NonNull
  public final Button buttonRemovePulseOximeter;

  @NonNull
  public final Button buttonRemoveScales;

  @NonNull
  public final Button buttonRemoveThermometer;

  @NonNull
  public final Button buttonTestAddLifetouch;

  @NonNull
  public final ImageView imageAddDeviceDownArrow;

  @NonNull
  public final LinearLayout linearLayoutAddDevicesServerCheck;

  @NonNull
  public final LinearLayout linearLayoutAddDevicesServerCheckAndInUseDetails;

  @NonNull
  public final LinearLayout linearLayoutManualVitalsOnly;

  @NonNull
  public final LinearLayout linearLayoutNoCameraControls;

  @NonNull
  public final ProgressBar progressBarAddDevicesCheckDeviceStatusProgressBar;

  @NonNull
  public final LinearLayout qrBarCode;

  @NonNull
  public final TableRow tableRowEarlyWarningScores;

  @NonNull
  public final TableRow tableRowLifetouchExpirationDate;

  @NonNull
  public final TableRow tableRowLifetouchLotNumber;

  @NonNull
  public final TableRow tableRowLifetouchManufactureDate;

  @NonNull
  public final TableRow tableRowThermometerExpirationDate;

  @NonNull
  public final TableRow tableRowThermometerLotNumber;

  @NonNull
  public final TableRow tableRowThermometerManufactureDate;

  @NonNull
  public final TextView textAddDevicesPageHelp;

  @NonNull
  public final TextView textAddDevicesPageHelp2;

  @NonNull
  public final TextView textViewAddDevicesDeviceBedName;

  @NonNull
  public final TextView textViewAddDevicesDeviceBedNameLabel;

  @NonNull
  public final TextView textViewAddDevicesDeviceWardName;

  @NonNull
  public final TextView textViewAddDevicesDeviceWardNameLabel;

  @NonNull
  public final TextView textViewAddDevicesThermometerHumanReadableSerialNumber;

  @NonNull
  public final TextView textViewBloodPressure;

  @NonNull
  public final TextView textViewBloodPressureHumanReadableSerialNumber;

  @NonNull
  public final TextView textViewCheckDeviceStatusCheckingServer;

  @NonNull
  public final TextView textViewEarlyWarningScores;

  @NonNull
  public final TextView textViewLifetouch;

  @NonNull
  public final TextView textViewLifetouchExpirationDate;

  @NonNull
  public final TextView textViewLifetouchHumanReadableSerialNumber;

  @NonNull
  public final TextView textViewLifetouchLotNumber;

  @NonNull
  public final TextView textViewLifetouchManufactureDate;

  @NonNull
  public final TextView textViewPulseOximeter;

  @NonNull
  public final TextView textViewPulseOximeterHumanReadableSerialNumber;

  @NonNull
  public final TextView textViewScales;

  @NonNull
  public final TextView textViewScalesHumanReadableSerialNumber;

  @NonNull
  public final TextView textViewThermometer;

  @NonNull
  public final TextView textViewThermometerExpirationDate;

  @NonNull
  public final TextView textViewThermometerLotNumber;

  @NonNull
  public final TextView textViewThermometerManufactureDate;

  @NonNull
  public final View viewBloodPressureGoodToUse;

  @NonNull
  public final View viewLifetouchGoodToUse;

  @NonNull
  public final View viewPulseOximeterGoodToUse;

  @NonNull
  public final View viewScalesGoodToUse;

  @NonNull
  public final View viewThermometerGoodToUse;

  private AddDevicesBinding(@NonNull LinearLayout rootView,
      @NonNull Button buttonAddEarlyWarningScore,
      @NonNull Button buttonGrayedOutAddEarlyWarningScore,
      @NonNull Button buttonGrayedOutRemoveEarlyWarningScore,
      @NonNull Button buttonManualVitalsOnly, @NonNull Button buttonRemoveBloodPressure,
      @NonNull Button buttonRemoveEarlyWarningScore, @NonNull Button buttonRemoveLifetouch,
      @NonNull Button buttonRemovePulseOximeter, @NonNull Button buttonRemoveScales,
      @NonNull Button buttonRemoveThermometer, @NonNull Button buttonTestAddLifetouch,
      @NonNull ImageView imageAddDeviceDownArrow,
      @NonNull LinearLayout linearLayoutAddDevicesServerCheck,
      @NonNull LinearLayout linearLayoutAddDevicesServerCheckAndInUseDetails,
      @NonNull LinearLayout linearLayoutManualVitalsOnly,
      @NonNull LinearLayout linearLayoutNoCameraControls,
      @NonNull ProgressBar progressBarAddDevicesCheckDeviceStatusProgressBar,
      @NonNull LinearLayout qrBarCode, @NonNull TableRow tableRowEarlyWarningScores,
      @NonNull TableRow tableRowLifetouchExpirationDate,
      @NonNull TableRow tableRowLifetouchLotNumber,
      @NonNull TableRow tableRowLifetouchManufactureDate,
      @NonNull TableRow tableRowThermometerExpirationDate,
      @NonNull TableRow tableRowThermometerLotNumber,
      @NonNull TableRow tableRowThermometerManufactureDate,
      @NonNull TextView textAddDevicesPageHelp, @NonNull TextView textAddDevicesPageHelp2,
      @NonNull TextView textViewAddDevicesDeviceBedName,
      @NonNull TextView textViewAddDevicesDeviceBedNameLabel,
      @NonNull TextView textViewAddDevicesDeviceWardName,
      @NonNull TextView textViewAddDevicesDeviceWardNameLabel,
      @NonNull TextView textViewAddDevicesThermometerHumanReadableSerialNumber,
      @NonNull TextView textViewBloodPressure,
      @NonNull TextView textViewBloodPressureHumanReadableSerialNumber,
      @NonNull TextView textViewCheckDeviceStatusCheckingServer,
      @NonNull TextView textViewEarlyWarningScores, @NonNull TextView textViewLifetouch,
      @NonNull TextView textViewLifetouchExpirationDate,
      @NonNull TextView textViewLifetouchHumanReadableSerialNumber,
      @NonNull TextView textViewLifetouchLotNumber,
      @NonNull TextView textViewLifetouchManufactureDate, @NonNull TextView textViewPulseOximeter,
      @NonNull TextView textViewPulseOximeterHumanReadableSerialNumber,
      @NonNull TextView textViewScales, @NonNull TextView textViewScalesHumanReadableSerialNumber,
      @NonNull TextView textViewThermometer, @NonNull TextView textViewThermometerExpirationDate,
      @NonNull TextView textViewThermometerLotNumber,
      @NonNull TextView textViewThermometerManufactureDate,
      @NonNull View viewBloodPressureGoodToUse, @NonNull View viewLifetouchGoodToUse,
      @NonNull View viewPulseOximeterGoodToUse, @NonNull View viewScalesGoodToUse,
      @NonNull View viewThermometerGoodToUse) {
    this.rootView = rootView;
    this.buttonAddEarlyWarningScore = buttonAddEarlyWarningScore;
    this.buttonGrayedOutAddEarlyWarningScore = buttonGrayedOutAddEarlyWarningScore;
    this.buttonGrayedOutRemoveEarlyWarningScore = buttonGrayedOutRemoveEarlyWarningScore;
    this.buttonManualVitalsOnly = buttonManualVitalsOnly;
    this.buttonRemoveBloodPressure = buttonRemoveBloodPressure;
    this.buttonRemoveEarlyWarningScore = buttonRemoveEarlyWarningScore;
    this.buttonRemoveLifetouch = buttonRemoveLifetouch;
    this.buttonRemovePulseOximeter = buttonRemovePulseOximeter;
    this.buttonRemoveScales = buttonRemoveScales;
    this.buttonRemoveThermometer = buttonRemoveThermometer;
    this.buttonTestAddLifetouch = buttonTestAddLifetouch;
    this.imageAddDeviceDownArrow = imageAddDeviceDownArrow;
    this.linearLayoutAddDevicesServerCheck = linearLayoutAddDevicesServerCheck;
    this.linearLayoutAddDevicesServerCheckAndInUseDetails = linearLayoutAddDevicesServerCheckAndInUseDetails;
    this.linearLayoutManualVitalsOnly = linearLayoutManualVitalsOnly;
    this.linearLayoutNoCameraControls = linearLayoutNoCameraControls;
    this.progressBarAddDevicesCheckDeviceStatusProgressBar = progressBarAddDevicesCheckDeviceStatusProgressBar;
    this.qrBarCode = qrBarCode;
    this.tableRowEarlyWarningScores = tableRowEarlyWarningScores;
    this.tableRowLifetouchExpirationDate = tableRowLifetouchExpirationDate;
    this.tableRowLifetouchLotNumber = tableRowLifetouchLotNumber;
    this.tableRowLifetouchManufactureDate = tableRowLifetouchManufactureDate;
    this.tableRowThermometerExpirationDate = tableRowThermometerExpirationDate;
    this.tableRowThermometerLotNumber = tableRowThermometerLotNumber;
    this.tableRowThermometerManufactureDate = tableRowThermometerManufactureDate;
    this.textAddDevicesPageHelp = textAddDevicesPageHelp;
    this.textAddDevicesPageHelp2 = textAddDevicesPageHelp2;
    this.textViewAddDevicesDeviceBedName = textViewAddDevicesDeviceBedName;
    this.textViewAddDevicesDeviceBedNameLabel = textViewAddDevicesDeviceBedNameLabel;
    this.textViewAddDevicesDeviceWardName = textViewAddDevicesDeviceWardName;
    this.textViewAddDevicesDeviceWardNameLabel = textViewAddDevicesDeviceWardNameLabel;
    this.textViewAddDevicesThermometerHumanReadableSerialNumber = textViewAddDevicesThermometerHumanReadableSerialNumber;
    this.textViewBloodPressure = textViewBloodPressure;
    this.textViewBloodPressureHumanReadableSerialNumber = textViewBloodPressureHumanReadableSerialNumber;
    this.textViewCheckDeviceStatusCheckingServer = textViewCheckDeviceStatusCheckingServer;
    this.textViewEarlyWarningScores = textViewEarlyWarningScores;
    this.textViewLifetouch = textViewLifetouch;
    this.textViewLifetouchExpirationDate = textViewLifetouchExpirationDate;
    this.textViewLifetouchHumanReadableSerialNumber = textViewLifetouchHumanReadableSerialNumber;
    this.textViewLifetouchLotNumber = textViewLifetouchLotNumber;
    this.textViewLifetouchManufactureDate = textViewLifetouchManufactureDate;
    this.textViewPulseOximeter = textViewPulseOximeter;
    this.textViewPulseOximeterHumanReadableSerialNumber = textViewPulseOximeterHumanReadableSerialNumber;
    this.textViewScales = textViewScales;
    this.textViewScalesHumanReadableSerialNumber = textViewScalesHumanReadableSerialNumber;
    this.textViewThermometer = textViewThermometer;
    this.textViewThermometerExpirationDate = textViewThermometerExpirationDate;
    this.textViewThermometerLotNumber = textViewThermometerLotNumber;
    this.textViewThermometerManufactureDate = textViewThermometerManufactureDate;
    this.viewBloodPressureGoodToUse = viewBloodPressureGoodToUse;
    this.viewLifetouchGoodToUse = viewLifetouchGoodToUse;
    this.viewPulseOximeterGoodToUse = viewPulseOximeterGoodToUse;
    this.viewScalesGoodToUse = viewScalesGoodToUse;
    this.viewThermometerGoodToUse = viewThermometerGoodToUse;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddDevicesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddDevicesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_devices, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddDevicesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAddEarlyWarningScore;
      Button buttonAddEarlyWarningScore = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddEarlyWarningScore == null) {
        break missingId;
      }

      id = R.id.buttonGrayedOutAddEarlyWarningScore;
      Button buttonGrayedOutAddEarlyWarningScore = ViewBindings.findChildViewById(rootView, id);
      if (buttonGrayedOutAddEarlyWarningScore == null) {
        break missingId;
      }

      id = R.id.buttonGrayedOutRemoveEarlyWarningScore;
      Button buttonGrayedOutRemoveEarlyWarningScore = ViewBindings.findChildViewById(rootView, id);
      if (buttonGrayedOutRemoveEarlyWarningScore == null) {
        break missingId;
      }

      id = R.id.buttonManualVitalsOnly;
      Button buttonManualVitalsOnly = ViewBindings.findChildViewById(rootView, id);
      if (buttonManualVitalsOnly == null) {
        break missingId;
      }

      id = R.id.buttonRemoveBloodPressure;
      Button buttonRemoveBloodPressure = ViewBindings.findChildViewById(rootView, id);
      if (buttonRemoveBloodPressure == null) {
        break missingId;
      }

      id = R.id.buttonRemoveEarlyWarningScore;
      Button buttonRemoveEarlyWarningScore = ViewBindings.findChildViewById(rootView, id);
      if (buttonRemoveEarlyWarningScore == null) {
        break missingId;
      }

      id = R.id.buttonRemoveLifetouch;
      Button buttonRemoveLifetouch = ViewBindings.findChildViewById(rootView, id);
      if (buttonRemoveLifetouch == null) {
        break missingId;
      }

      id = R.id.buttonRemovePulseOximeter;
      Button buttonRemovePulseOximeter = ViewBindings.findChildViewById(rootView, id);
      if (buttonRemovePulseOximeter == null) {
        break missingId;
      }

      id = R.id.buttonRemoveScales;
      Button buttonRemoveScales = ViewBindings.findChildViewById(rootView, id);
      if (buttonRemoveScales == null) {
        break missingId;
      }

      id = R.id.buttonRemoveThermometer;
      Button buttonRemoveThermometer = ViewBindings.findChildViewById(rootView, id);
      if (buttonRemoveThermometer == null) {
        break missingId;
      }

      id = R.id.buttonTestAddLifetouch;
      Button buttonTestAddLifetouch = ViewBindings.findChildViewById(rootView, id);
      if (buttonTestAddLifetouch == null) {
        break missingId;
      }

      id = R.id.imageAddDevice_DownArrow;
      ImageView imageAddDeviceDownArrow = ViewBindings.findChildViewById(rootView, id);
      if (imageAddDeviceDownArrow == null) {
        break missingId;
      }

      id = R.id.linearLayoutAddDevicesServerCheck;
      LinearLayout linearLayoutAddDevicesServerCheck = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutAddDevicesServerCheck == null) {
        break missingId;
      }

      id = R.id.linearLayoutAddDevicesServerCheckAndInUseDetails;
      LinearLayout linearLayoutAddDevicesServerCheckAndInUseDetails = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutAddDevicesServerCheckAndInUseDetails == null) {
        break missingId;
      }

      id = R.id.linearLayoutManualVitalsOnly;
      LinearLayout linearLayoutManualVitalsOnly = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutManualVitalsOnly == null) {
        break missingId;
      }

      id = R.id.linearLayoutNoCameraControls;
      LinearLayout linearLayoutNoCameraControls = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutNoCameraControls == null) {
        break missingId;
      }

      id = R.id.progressBarAddDevicesCheckDeviceStatusProgressBar;
      ProgressBar progressBarAddDevicesCheckDeviceStatusProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBarAddDevicesCheckDeviceStatusProgressBar == null) {
        break missingId;
      }

      id = R.id.qr_bar_code;
      LinearLayout qrBarCode = ViewBindings.findChildViewById(rootView, id);
      if (qrBarCode == null) {
        break missingId;
      }

      id = R.id.tableRowEarlyWarningScores;
      TableRow tableRowEarlyWarningScores = ViewBindings.findChildViewById(rootView, id);
      if (tableRowEarlyWarningScores == null) {
        break missingId;
      }

      id = R.id.tableRowLifetouchExpirationDate;
      TableRow tableRowLifetouchExpirationDate = ViewBindings.findChildViewById(rootView, id);
      if (tableRowLifetouchExpirationDate == null) {
        break missingId;
      }

      id = R.id.tableRowLifetouchLotNumber;
      TableRow tableRowLifetouchLotNumber = ViewBindings.findChildViewById(rootView, id);
      if (tableRowLifetouchLotNumber == null) {
        break missingId;
      }

      id = R.id.tableRowLifetouchManufactureDate;
      TableRow tableRowLifetouchManufactureDate = ViewBindings.findChildViewById(rootView, id);
      if (tableRowLifetouchManufactureDate == null) {
        break missingId;
      }

      id = R.id.tableRowThermometerExpirationDate;
      TableRow tableRowThermometerExpirationDate = ViewBindings.findChildViewById(rootView, id);
      if (tableRowThermometerExpirationDate == null) {
        break missingId;
      }

      id = R.id.tableRowThermometerLotNumber;
      TableRow tableRowThermometerLotNumber = ViewBindings.findChildViewById(rootView, id);
      if (tableRowThermometerLotNumber == null) {
        break missingId;
      }

      id = R.id.tableRowThermometerManufactureDate;
      TableRow tableRowThermometerManufactureDate = ViewBindings.findChildViewById(rootView, id);
      if (tableRowThermometerManufactureDate == null) {
        break missingId;
      }

      id = R.id.textAddDevicesPageHelp;
      TextView textAddDevicesPageHelp = ViewBindings.findChildViewById(rootView, id);
      if (textAddDevicesPageHelp == null) {
        break missingId;
      }

      id = R.id.textAddDevicesPageHelp2;
      TextView textAddDevicesPageHelp2 = ViewBindings.findChildViewById(rootView, id);
      if (textAddDevicesPageHelp2 == null) {
        break missingId;
      }

      id = R.id.textViewAddDevicesDeviceBedName;
      TextView textViewAddDevicesDeviceBedName = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddDevicesDeviceBedName == null) {
        break missingId;
      }

      id = R.id.textViewAddDevicesDeviceBedNameLabel;
      TextView textViewAddDevicesDeviceBedNameLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddDevicesDeviceBedNameLabel == null) {
        break missingId;
      }

      id = R.id.textViewAddDevicesDeviceWardName;
      TextView textViewAddDevicesDeviceWardName = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddDevicesDeviceWardName == null) {
        break missingId;
      }

      id = R.id.textViewAddDevicesDeviceWardNameLabel;
      TextView textViewAddDevicesDeviceWardNameLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddDevicesDeviceWardNameLabel == null) {
        break missingId;
      }

      id = R.id.textViewAddDevicesThermometerHumanReadableSerialNumber;
      TextView textViewAddDevicesThermometerHumanReadableSerialNumber = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddDevicesThermometerHumanReadableSerialNumber == null) {
        break missingId;
      }

      id = R.id.textViewBloodPressure;
      TextView textViewBloodPressure = ViewBindings.findChildViewById(rootView, id);
      if (textViewBloodPressure == null) {
        break missingId;
      }

      id = R.id.textViewBloodPressureHumanReadableSerialNumber;
      TextView textViewBloodPressureHumanReadableSerialNumber = ViewBindings.findChildViewById(rootView, id);
      if (textViewBloodPressureHumanReadableSerialNumber == null) {
        break missingId;
      }

      id = R.id.textViewCheckDeviceStatusCheckingServer;
      TextView textViewCheckDeviceStatusCheckingServer = ViewBindings.findChildViewById(rootView, id);
      if (textViewCheckDeviceStatusCheckingServer == null) {
        break missingId;
      }

      id = R.id.textViewEarlyWarningScores;
      TextView textViewEarlyWarningScores = ViewBindings.findChildViewById(rootView, id);
      if (textViewEarlyWarningScores == null) {
        break missingId;
      }

      id = R.id.textViewLifetouch;
      TextView textViewLifetouch = ViewBindings.findChildViewById(rootView, id);
      if (textViewLifetouch == null) {
        break missingId;
      }

      id = R.id.textViewLifetouchExpirationDate;
      TextView textViewLifetouchExpirationDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewLifetouchExpirationDate == null) {
        break missingId;
      }

      id = R.id.textViewLifetouchHumanReadableSerialNumber;
      TextView textViewLifetouchHumanReadableSerialNumber = ViewBindings.findChildViewById(rootView, id);
      if (textViewLifetouchHumanReadableSerialNumber == null) {
        break missingId;
      }

      id = R.id.textViewLifetouchLotNumber;
      TextView textViewLifetouchLotNumber = ViewBindings.findChildViewById(rootView, id);
      if (textViewLifetouchLotNumber == null) {
        break missingId;
      }

      id = R.id.textViewLifetouchManufactureDate;
      TextView textViewLifetouchManufactureDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewLifetouchManufactureDate == null) {
        break missingId;
      }

      id = R.id.textViewPulseOximeter;
      TextView textViewPulseOximeter = ViewBindings.findChildViewById(rootView, id);
      if (textViewPulseOximeter == null) {
        break missingId;
      }

      id = R.id.textViewPulseOximeterHumanReadableSerialNumber;
      TextView textViewPulseOximeterHumanReadableSerialNumber = ViewBindings.findChildViewById(rootView, id);
      if (textViewPulseOximeterHumanReadableSerialNumber == null) {
        break missingId;
      }

      id = R.id.textViewScales;
      TextView textViewScales = ViewBindings.findChildViewById(rootView, id);
      if (textViewScales == null) {
        break missingId;
      }

      id = R.id.textViewScalesHumanReadableSerialNumber;
      TextView textViewScalesHumanReadableSerialNumber = ViewBindings.findChildViewById(rootView, id);
      if (textViewScalesHumanReadableSerialNumber == null) {
        break missingId;
      }

      id = R.id.textViewThermometer;
      TextView textViewThermometer = ViewBindings.findChildViewById(rootView, id);
      if (textViewThermometer == null) {
        break missingId;
      }

      id = R.id.textViewThermometerExpirationDate;
      TextView textViewThermometerExpirationDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewThermometerExpirationDate == null) {
        break missingId;
      }

      id = R.id.textViewThermometerLotNumber;
      TextView textViewThermometerLotNumber = ViewBindings.findChildViewById(rootView, id);
      if (textViewThermometerLotNumber == null) {
        break missingId;
      }

      id = R.id.textViewThermometerManufactureDate;
      TextView textViewThermometerManufactureDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewThermometerManufactureDate == null) {
        break missingId;
      }

      id = R.id.viewBloodPressureGoodToUse;
      View viewBloodPressureGoodToUse = ViewBindings.findChildViewById(rootView, id);
      if (viewBloodPressureGoodToUse == null) {
        break missingId;
      }

      id = R.id.viewLifetouchGoodToUse;
      View viewLifetouchGoodToUse = ViewBindings.findChildViewById(rootView, id);
      if (viewLifetouchGoodToUse == null) {
        break missingId;
      }

      id = R.id.viewPulseOximeterGoodToUse;
      View viewPulseOximeterGoodToUse = ViewBindings.findChildViewById(rootView, id);
      if (viewPulseOximeterGoodToUse == null) {
        break missingId;
      }

      id = R.id.viewScalesGoodToUse;
      View viewScalesGoodToUse = ViewBindings.findChildViewById(rootView, id);
      if (viewScalesGoodToUse == null) {
        break missingId;
      }

      id = R.id.viewThermometerGoodToUse;
      View viewThermometerGoodToUse = ViewBindings.findChildViewById(rootView, id);
      if (viewThermometerGoodToUse == null) {
        break missingId;
      }

      return new AddDevicesBinding((LinearLayout) rootView, buttonAddEarlyWarningScore,
          buttonGrayedOutAddEarlyWarningScore, buttonGrayedOutRemoveEarlyWarningScore,
          buttonManualVitalsOnly, buttonRemoveBloodPressure, buttonRemoveEarlyWarningScore,
          buttonRemoveLifetouch, buttonRemovePulseOximeter, buttonRemoveScales,
          buttonRemoveThermometer, buttonTestAddLifetouch, imageAddDeviceDownArrow,
          linearLayoutAddDevicesServerCheck, linearLayoutAddDevicesServerCheckAndInUseDetails,
          linearLayoutManualVitalsOnly, linearLayoutNoCameraControls,
          progressBarAddDevicesCheckDeviceStatusProgressBar, qrBarCode, tableRowEarlyWarningScores,
          tableRowLifetouchExpirationDate, tableRowLifetouchLotNumber,
          tableRowLifetouchManufactureDate, tableRowThermometerExpirationDate,
          tableRowThermometerLotNumber, tableRowThermometerManufactureDate, textAddDevicesPageHelp,
          textAddDevicesPageHelp2, textViewAddDevicesDeviceBedName,
          textViewAddDevicesDeviceBedNameLabel, textViewAddDevicesDeviceWardName,
          textViewAddDevicesDeviceWardNameLabel,
          textViewAddDevicesThermometerHumanReadableSerialNumber, textViewBloodPressure,
          textViewBloodPressureHumanReadableSerialNumber, textViewCheckDeviceStatusCheckingServer,
          textViewEarlyWarningScores, textViewLifetouch, textViewLifetouchExpirationDate,
          textViewLifetouchHumanReadableSerialNumber, textViewLifetouchLotNumber,
          textViewLifetouchManufactureDate, textViewPulseOximeter,
          textViewPulseOximeterHumanReadableSerialNumber, textViewScales,
          textViewScalesHumanReadableSerialNumber, textViewThermometer,
          textViewThermometerExpirationDate, textViewThermometerLotNumber,
          textViewThermometerManufactureDate, viewBloodPressureGoodToUse, viewLifetouchGoodToUse,
          viewPulseOximeterGoodToUse, viewScalesGoodToUse, viewThermometerGoodToUse);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
