// Generated by view binder compiler. Do not edit!
package com.isansys.pse_isansysportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ajit.customseekbar.CustomSeekBar;
import com.isansys.pse_isansysportal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PatientDetailsAgeRange2Binding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imagePatientAgeRangeA;

  @NonNull
  public final LinearLayout linearLayoutAgeRangeDisplay;

  @NonNull
  public final LinearLayout linearLayoutPatientAgeRangeA;

  @NonNull
  public final LinearLayout linearLayoutPatientDetailsAgeRangeTextExplaining;

  @NonNull
  public final LinearLayout linearLayoutPictureAgeRange;

  @NonNull
  public final LinearLayout linearLayoutThresholdLevelBloodPressure;

  @NonNull
  public final LinearLayout linearLayoutThresholdLevelLifetemp;

  @NonNull
  public final LinearLayout linearLayoutThresholdLevelLifetouchHeartRate;

  @NonNull
  public final LinearLayout linearLayoutThresholdLevelLifetouchRespirationRate;

  @NonNull
  public final LinearLayout linearLayoutThresholdLevelPulseOx;

  @NonNull
  public final LinearLayout linearLayoutThresholdLevels;

  @NonNull
  public final LinearLayout linearLayoutThresholdLevelsDescriptions;

  @NonNull
  public final LinearLayout linearLayoutThresholds;

  @NonNull
  public final RadioGroup radioGroupPatientAge;

  @NonNull
  public final CustomSeekBar seekBarBloodPressure;

  @NonNull
  public final CustomSeekBar seekBarLifetemp;

  @NonNull
  public final CustomSeekBar seekBarLifetouchHeartRate;

  @NonNull
  public final CustomSeekBar seekBarLifetouchRespirationRate;

  @NonNull
  public final CustomSeekBar seekBarPulseOx;

  @NonNull
  public final LinearLayout startSessionSettingsActivity;

  @NonNull
  public final TextView textPleaseSelectPatientAgeRange;

  @NonNull
  public final TextView textTextExplainingWhatRadioButtonsDo;

  @NonNull
  public final TextView textThresholdDescriptionBloodPressure;

  @NonNull
  public final TextView textThresholdDescriptionHeartRate;

  @NonNull
  public final TextView textThresholdDescriptionRespirationRate;

  @NonNull
  public final TextView textThresholdDescriptionSpO2;

  @NonNull
  public final TextView textThresholdDescriptionTemperature;

  private PatientDetailsAgeRange2Binding(@NonNull LinearLayout rootView,
      @NonNull ImageView imagePatientAgeRangeA, @NonNull LinearLayout linearLayoutAgeRangeDisplay,
      @NonNull LinearLayout linearLayoutPatientAgeRangeA,
      @NonNull LinearLayout linearLayoutPatientDetailsAgeRangeTextExplaining,
      @NonNull LinearLayout linearLayoutPictureAgeRange,
      @NonNull LinearLayout linearLayoutThresholdLevelBloodPressure,
      @NonNull LinearLayout linearLayoutThresholdLevelLifetemp,
      @NonNull LinearLayout linearLayoutThresholdLevelLifetouchHeartRate,
      @NonNull LinearLayout linearLayoutThresholdLevelLifetouchRespirationRate,
      @NonNull LinearLayout linearLayoutThresholdLevelPulseOx,
      @NonNull LinearLayout linearLayoutThresholdLevels,
      @NonNull LinearLayout linearLayoutThresholdLevelsDescriptions,
      @NonNull LinearLayout linearLayoutThresholds, @NonNull RadioGroup radioGroupPatientAge,
      @NonNull CustomSeekBar seekBarBloodPressure, @NonNull CustomSeekBar seekBarLifetemp,
      @NonNull CustomSeekBar seekBarLifetouchHeartRate,
      @NonNull CustomSeekBar seekBarLifetouchRespirationRate, @NonNull CustomSeekBar seekBarPulseOx,
      @NonNull LinearLayout startSessionSettingsActivity,
      @NonNull TextView textPleaseSelectPatientAgeRange,
      @NonNull TextView textTextExplainingWhatRadioButtonsDo,
      @NonNull TextView textThresholdDescriptionBloodPressure,
      @NonNull TextView textThresholdDescriptionHeartRate,
      @NonNull TextView textThresholdDescriptionRespirationRate,
      @NonNull TextView textThresholdDescriptionSpO2,
      @NonNull TextView textThresholdDescriptionTemperature) {
    this.rootView = rootView;
    this.imagePatientAgeRangeA = imagePatientAgeRangeA;
    this.linearLayoutAgeRangeDisplay = linearLayoutAgeRangeDisplay;
    this.linearLayoutPatientAgeRangeA = linearLayoutPatientAgeRangeA;
    this.linearLayoutPatientDetailsAgeRangeTextExplaining = linearLayoutPatientDetailsAgeRangeTextExplaining;
    this.linearLayoutPictureAgeRange = linearLayoutPictureAgeRange;
    this.linearLayoutThresholdLevelBloodPressure = linearLayoutThresholdLevelBloodPressure;
    this.linearLayoutThresholdLevelLifetemp = linearLayoutThresholdLevelLifetemp;
    this.linearLayoutThresholdLevelLifetouchHeartRate = linearLayoutThresholdLevelLifetouchHeartRate;
    this.linearLayoutThresholdLevelLifetouchRespirationRate = linearLayoutThresholdLevelLifetouchRespirationRate;
    this.linearLayoutThresholdLevelPulseOx = linearLayoutThresholdLevelPulseOx;
    this.linearLayoutThresholdLevels = linearLayoutThresholdLevels;
    this.linearLayoutThresholdLevelsDescriptions = linearLayoutThresholdLevelsDescriptions;
    this.linearLayoutThresholds = linearLayoutThresholds;
    this.radioGroupPatientAge = radioGroupPatientAge;
    this.seekBarBloodPressure = seekBarBloodPressure;
    this.seekBarLifetemp = seekBarLifetemp;
    this.seekBarLifetouchHeartRate = seekBarLifetouchHeartRate;
    this.seekBarLifetouchRespirationRate = seekBarLifetouchRespirationRate;
    this.seekBarPulseOx = seekBarPulseOx;
    this.startSessionSettingsActivity = startSessionSettingsActivity;
    this.textPleaseSelectPatientAgeRange = textPleaseSelectPatientAgeRange;
    this.textTextExplainingWhatRadioButtonsDo = textTextExplainingWhatRadioButtonsDo;
    this.textThresholdDescriptionBloodPressure = textThresholdDescriptionBloodPressure;
    this.textThresholdDescriptionHeartRate = textThresholdDescriptionHeartRate;
    this.textThresholdDescriptionRespirationRate = textThresholdDescriptionRespirationRate;
    this.textThresholdDescriptionSpO2 = textThresholdDescriptionSpO2;
    this.textThresholdDescriptionTemperature = textThresholdDescriptionTemperature;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PatientDetailsAgeRange2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PatientDetailsAgeRange2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.patient_details_age_range_2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PatientDetailsAgeRange2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imagePatientAgeRangeA;
      ImageView imagePatientAgeRangeA = ViewBindings.findChildViewById(rootView, id);
      if (imagePatientAgeRangeA == null) {
        break missingId;
      }

      id = R.id.linearLayoutAgeRangeDisplay;
      LinearLayout linearLayoutAgeRangeDisplay = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutAgeRangeDisplay == null) {
        break missingId;
      }

      id = R.id.linearLayoutPatientAgeRangeA;
      LinearLayout linearLayoutPatientAgeRangeA = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutPatientAgeRangeA == null) {
        break missingId;
      }

      id = R.id.linearLayoutPatientDetailsAgeRangeTextExplaining;
      LinearLayout linearLayoutPatientDetailsAgeRangeTextExplaining = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutPatientDetailsAgeRangeTextExplaining == null) {
        break missingId;
      }

      id = R.id.linearLayoutPictureAgeRange;
      LinearLayout linearLayoutPictureAgeRange = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutPictureAgeRange == null) {
        break missingId;
      }

      id = R.id.linearLayoutThresholdLevelBloodPressure;
      LinearLayout linearLayoutThresholdLevelBloodPressure = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutThresholdLevelBloodPressure == null) {
        break missingId;
      }

      id = R.id.linearLayoutThresholdLevelLifetemp;
      LinearLayout linearLayoutThresholdLevelLifetemp = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutThresholdLevelLifetemp == null) {
        break missingId;
      }

      id = R.id.linearLayoutThresholdLevelLifetouchHeartRate;
      LinearLayout linearLayoutThresholdLevelLifetouchHeartRate = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutThresholdLevelLifetouchHeartRate == null) {
        break missingId;
      }

      id = R.id.linearLayoutThresholdLevelLifetouchRespirationRate;
      LinearLayout linearLayoutThresholdLevelLifetouchRespirationRate = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutThresholdLevelLifetouchRespirationRate == null) {
        break missingId;
      }

      id = R.id.linearLayoutThresholdLevelPulseOx;
      LinearLayout linearLayoutThresholdLevelPulseOx = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutThresholdLevelPulseOx == null) {
        break missingId;
      }

      id = R.id.linearLayoutThresholdLevels;
      LinearLayout linearLayoutThresholdLevels = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutThresholdLevels == null) {
        break missingId;
      }

      id = R.id.linearLayoutThresholdLevelsDescriptions;
      LinearLayout linearLayoutThresholdLevelsDescriptions = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutThresholdLevelsDescriptions == null) {
        break missingId;
      }

      id = R.id.linearLayoutThresholds;
      LinearLayout linearLayoutThresholds = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutThresholds == null) {
        break missingId;
      }

      id = R.id.radioGroupPatientAge;
      RadioGroup radioGroupPatientAge = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupPatientAge == null) {
        break missingId;
      }

      id = R.id.seekBarBloodPressure;
      CustomSeekBar seekBarBloodPressure = ViewBindings.findChildViewById(rootView, id);
      if (seekBarBloodPressure == null) {
        break missingId;
      }

      id = R.id.seekBarLifetemp;
      CustomSeekBar seekBarLifetemp = ViewBindings.findChildViewById(rootView, id);
      if (seekBarLifetemp == null) {
        break missingId;
      }

      id = R.id.seekBarLifetouchHeartRate;
      CustomSeekBar seekBarLifetouchHeartRate = ViewBindings.findChildViewById(rootView, id);
      if (seekBarLifetouchHeartRate == null) {
        break missingId;
      }

      id = R.id.seekBarLifetouchRespirationRate;
      CustomSeekBar seekBarLifetouchRespirationRate = ViewBindings.findChildViewById(rootView, id);
      if (seekBarLifetouchRespirationRate == null) {
        break missingId;
      }

      id = R.id.seekBarPulseOx;
      CustomSeekBar seekBarPulseOx = ViewBindings.findChildViewById(rootView, id);
      if (seekBarPulseOx == null) {
        break missingId;
      }

      LinearLayout startSessionSettingsActivity = (LinearLayout) rootView;

      id = R.id.textPleaseSelectPatientAgeRange;
      TextView textPleaseSelectPatientAgeRange = ViewBindings.findChildViewById(rootView, id);
      if (textPleaseSelectPatientAgeRange == null) {
        break missingId;
      }

      id = R.id.textTextExplainingWhatRadioButtonsDo;
      TextView textTextExplainingWhatRadioButtonsDo = ViewBindings.findChildViewById(rootView, id);
      if (textTextExplainingWhatRadioButtonsDo == null) {
        break missingId;
      }

      id = R.id.textThresholdDescriptionBloodPressure;
      TextView textThresholdDescriptionBloodPressure = ViewBindings.findChildViewById(rootView, id);
      if (textThresholdDescriptionBloodPressure == null) {
        break missingId;
      }

      id = R.id.textThresholdDescriptionHeartRate;
      TextView textThresholdDescriptionHeartRate = ViewBindings.findChildViewById(rootView, id);
      if (textThresholdDescriptionHeartRate == null) {
        break missingId;
      }

      id = R.id.textThresholdDescriptionRespirationRate;
      TextView textThresholdDescriptionRespirationRate = ViewBindings.findChildViewById(rootView, id);
      if (textThresholdDescriptionRespirationRate == null) {
        break missingId;
      }

      id = R.id.textThresholdDescriptionSpO2;
      TextView textThresholdDescriptionSpO2 = ViewBindings.findChildViewById(rootView, id);
      if (textThresholdDescriptionSpO2 == null) {
        break missingId;
      }

      id = R.id.textThresholdDescriptionTemperature;
      TextView textThresholdDescriptionTemperature = ViewBindings.findChildViewById(rootView, id);
      if (textThresholdDescriptionTemperature == null) {
        break missingId;
      }

      return new PatientDetailsAgeRange2Binding((LinearLayout) rootView, imagePatientAgeRangeA,
          linearLayoutAgeRangeDisplay, linearLayoutPatientAgeRangeA,
          linearLayoutPatientDetailsAgeRangeTextExplaining, linearLayoutPictureAgeRange,
          linearLayoutThresholdLevelBloodPressure, linearLayoutThresholdLevelLifetemp,
          linearLayoutThresholdLevelLifetouchHeartRate,
          linearLayoutThresholdLevelLifetouchRespirationRate, linearLayoutThresholdLevelPulseOx,
          linearLayoutThresholdLevels, linearLayoutThresholdLevelsDescriptions,
          linearLayoutThresholds, radioGroupPatientAge, seekBarBloodPressure, seekBarLifetemp,
          seekBarLifetouchHeartRate, seekBarLifetouchRespirationRate, seekBarPulseOx,
          startSessionSettingsActivity, textPleaseSelectPatientAgeRange,
          textTextExplainingWhatRadioButtonsDo, textThresholdDescriptionBloodPressure,
          textThresholdDescriptionHeartRate, textThresholdDescriptionRespirationRate,
          textThresholdDescriptionSpO2, textThresholdDescriptionTemperature);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
