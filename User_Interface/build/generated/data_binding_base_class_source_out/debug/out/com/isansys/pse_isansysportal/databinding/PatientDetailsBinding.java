// Generated by view binder compiler. Do not edit!
package com.isansys.pse_isansysportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.isansys.pse_isansysportal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PatientDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonAppendDateTime;

  @NonNull
  public final EditText editPatientID;

  @NonNull
  public final ImageView imagePatientDetailsDownArrow;

  @NonNull
  public final ImageView imagePressDoneWhenFinishedDownArrow;

  @NonNull
  public final TextView labelPatientID;

  @NonNull
  public final LinearLayout linearLayoutPatientDetailsShowNextArrow;

  @NonNull
  public final LinearLayout linearLayoutPressDoneWhenFinished;

  @NonNull
  public final LinearLayout startSessionSettingsActivity;

  @NonNull
  public final TextView textViewPatientDetailPressNextButton;

  @NonNull
  public final TextView textViewPressDoneWhenFinished;

  private PatientDetailsBinding(@NonNull LinearLayout rootView,
      @NonNull Button buttonAppendDateTime, @NonNull EditText editPatientID,
      @NonNull ImageView imagePatientDetailsDownArrow,
      @NonNull ImageView imagePressDoneWhenFinishedDownArrow, @NonNull TextView labelPatientID,
      @NonNull LinearLayout linearLayoutPatientDetailsShowNextArrow,
      @NonNull LinearLayout linearLayoutPressDoneWhenFinished,
      @NonNull LinearLayout startSessionSettingsActivity,
      @NonNull TextView textViewPatientDetailPressNextButton,
      @NonNull TextView textViewPressDoneWhenFinished) {
    this.rootView = rootView;
    this.buttonAppendDateTime = buttonAppendDateTime;
    this.editPatientID = editPatientID;
    this.imagePatientDetailsDownArrow = imagePatientDetailsDownArrow;
    this.imagePressDoneWhenFinishedDownArrow = imagePressDoneWhenFinishedDownArrow;
    this.labelPatientID = labelPatientID;
    this.linearLayoutPatientDetailsShowNextArrow = linearLayoutPatientDetailsShowNextArrow;
    this.linearLayoutPressDoneWhenFinished = linearLayoutPressDoneWhenFinished;
    this.startSessionSettingsActivity = startSessionSettingsActivity;
    this.textViewPatientDetailPressNextButton = textViewPatientDetailPressNextButton;
    this.textViewPressDoneWhenFinished = textViewPressDoneWhenFinished;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PatientDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PatientDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.patient_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PatientDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAppendDateTime;
      Button buttonAppendDateTime = ViewBindings.findChildViewById(rootView, id);
      if (buttonAppendDateTime == null) {
        break missingId;
      }

      id = R.id.editPatientID;
      EditText editPatientID = ViewBindings.findChildViewById(rootView, id);
      if (editPatientID == null) {
        break missingId;
      }

      id = R.id.imagePatientDetails_DownArrow;
      ImageView imagePatientDetailsDownArrow = ViewBindings.findChildViewById(rootView, id);
      if (imagePatientDetailsDownArrow == null) {
        break missingId;
      }

      id = R.id.imagePressDoneWhenFinishedDownArrow;
      ImageView imagePressDoneWhenFinishedDownArrow = ViewBindings.findChildViewById(rootView, id);
      if (imagePressDoneWhenFinishedDownArrow == null) {
        break missingId;
      }

      id = R.id.labelPatientID;
      TextView labelPatientID = ViewBindings.findChildViewById(rootView, id);
      if (labelPatientID == null) {
        break missingId;
      }

      id = R.id.linearLayoutPatientDetailsShowNextArrow;
      LinearLayout linearLayoutPatientDetailsShowNextArrow = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutPatientDetailsShowNextArrow == null) {
        break missingId;
      }

      id = R.id.linearLayoutPressDoneWhenFinished;
      LinearLayout linearLayoutPressDoneWhenFinished = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutPressDoneWhenFinished == null) {
        break missingId;
      }

      LinearLayout startSessionSettingsActivity = (LinearLayout) rootView;

      id = R.id.textViewPatientDetail_pressNextButton;
      TextView textViewPatientDetailPressNextButton = ViewBindings.findChildViewById(rootView, id);
      if (textViewPatientDetailPressNextButton == null) {
        break missingId;
      }

      id = R.id.textViewPressDoneWhenFinished;
      TextView textViewPressDoneWhenFinished = ViewBindings.findChildViewById(rootView, id);
      if (textViewPressDoneWhenFinished == null) {
        break missingId;
      }

      return new PatientDetailsBinding((LinearLayout) rootView, buttonAppendDateTime, editPatientID,
          imagePatientDetailsDownArrow, imagePressDoneWhenFinishedDownArrow, labelPatientID,
          linearLayoutPatientDetailsShowNextArrow, linearLayoutPressDoneWhenFinished,
          startSessionSettingsActivity, textViewPatientDetailPressNextButton,
          textViewPressDoneWhenFinished);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
