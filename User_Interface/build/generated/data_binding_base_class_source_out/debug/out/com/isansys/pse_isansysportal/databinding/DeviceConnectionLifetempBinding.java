// Generated by view binder compiler. Do not edit!
package com.isansys.pse_isansysportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.akexorcist.roundcornerprogressbar.RoundCornerProgressBar;
import com.isansys.pse_isansysportal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DeviceConnectionLifetempBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonLifetempCancelSearchOrSearchAgain;

  @NonNull
  public final LinearLayout linearLayoutDeviceConnectionLifetemp;

  @NonNull
  public final ImageView logoLifetemp;

  @NonNull
  public final RoundCornerProgressBar progressBarLifetempConnection;

  @NonNull
  public final TextView textViewDeviceConnectionLifetempHumanReadableSerialNumber;

  @NonNull
  public final TextView textViewLifetemp;

  @NonNull
  public final TextView textViewLifetempSearchStatus;

  private DeviceConnectionLifetempBinding(@NonNull LinearLayout rootView,
      @NonNull Button buttonLifetempCancelSearchOrSearchAgain,
      @NonNull LinearLayout linearLayoutDeviceConnectionLifetemp, @NonNull ImageView logoLifetemp,
      @NonNull RoundCornerProgressBar progressBarLifetempConnection,
      @NonNull TextView textViewDeviceConnectionLifetempHumanReadableSerialNumber,
      @NonNull TextView textViewLifetemp, @NonNull TextView textViewLifetempSearchStatus) {
    this.rootView = rootView;
    this.buttonLifetempCancelSearchOrSearchAgain = buttonLifetempCancelSearchOrSearchAgain;
    this.linearLayoutDeviceConnectionLifetemp = linearLayoutDeviceConnectionLifetemp;
    this.logoLifetemp = logoLifetemp;
    this.progressBarLifetempConnection = progressBarLifetempConnection;
    this.textViewDeviceConnectionLifetempHumanReadableSerialNumber = textViewDeviceConnectionLifetempHumanReadableSerialNumber;
    this.textViewLifetemp = textViewLifetemp;
    this.textViewLifetempSearchStatus = textViewLifetempSearchStatus;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DeviceConnectionLifetempBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DeviceConnectionLifetempBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.device_connection__lifetemp, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DeviceConnectionLifetempBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonLifetempCancelSearchOrSearchAgain;
      Button buttonLifetempCancelSearchOrSearchAgain = ViewBindings.findChildViewById(rootView, id);
      if (buttonLifetempCancelSearchOrSearchAgain == null) {
        break missingId;
      }

      LinearLayout linearLayoutDeviceConnectionLifetemp = (LinearLayout) rootView;

      id = R.id.logo_lifetemp;
      ImageView logoLifetemp = ViewBindings.findChildViewById(rootView, id);
      if (logoLifetemp == null) {
        break missingId;
      }

      id = R.id.progressBarLifetempConnection;
      RoundCornerProgressBar progressBarLifetempConnection = ViewBindings.findChildViewById(rootView, id);
      if (progressBarLifetempConnection == null) {
        break missingId;
      }

      id = R.id.textViewDeviceConnectionLifetempHumanReadableSerialNumber;
      TextView textViewDeviceConnectionLifetempHumanReadableSerialNumber = ViewBindings.findChildViewById(rootView, id);
      if (textViewDeviceConnectionLifetempHumanReadableSerialNumber == null) {
        break missingId;
      }

      id = R.id.textViewLifetemp;
      TextView textViewLifetemp = ViewBindings.findChildViewById(rootView, id);
      if (textViewLifetemp == null) {
        break missingId;
      }

      id = R.id.textViewLifetempSearchStatus;
      TextView textViewLifetempSearchStatus = ViewBindings.findChildViewById(rootView, id);
      if (textViewLifetempSearchStatus == null) {
        break missingId;
      }

      return new DeviceConnectionLifetempBinding((LinearLayout) rootView,
          buttonLifetempCancelSearchOrSearchAgain, linearLayoutDeviceConnectionLifetemp,
          logoLifetemp, progressBarLifetempConnection,
          textViewDeviceConnectionLifetempHumanReadableSerialNumber, textViewLifetemp,
          textViewLifetempSearchStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
