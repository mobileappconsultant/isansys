// Generated by view binder compiler. Do not edit!
package com.isansys.pse_isansysportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.isansys.pse_isansysportal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EndSessionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout LinearLayoutProgressBarAndTextViewDeviceMeasurementPending;

  @NonNull
  public final Button buttonCancelLifetouchPendingHeartBeatTransfer;

  @NonNull
  public final Button buttonEndSession;

  @NonNull
  public final Button buttonTransferSession;

  @NonNull
  public final LinearLayout linearLayoutDeviceMeasurementsPending;

  @NonNull
  public final ProgressBar progressBarPendingHeartBeatEndDevice;

  @NonNull
  public final TextView textAreYouSure;

  @NonNull
  public final TextView textViewDeviceDisconnectionStatus;

  @NonNull
  public final TextView textViewWarningDevicePendingMeasurement;

  private EndSessionBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout LinearLayoutProgressBarAndTextViewDeviceMeasurementPending,
      @NonNull Button buttonCancelLifetouchPendingHeartBeatTransfer,
      @NonNull Button buttonEndSession, @NonNull Button buttonTransferSession,
      @NonNull LinearLayout linearLayoutDeviceMeasurementsPending,
      @NonNull ProgressBar progressBarPendingHeartBeatEndDevice, @NonNull TextView textAreYouSure,
      @NonNull TextView textViewDeviceDisconnectionStatus,
      @NonNull TextView textViewWarningDevicePendingMeasurement) {
    this.rootView = rootView;
    this.LinearLayoutProgressBarAndTextViewDeviceMeasurementPending = LinearLayoutProgressBarAndTextViewDeviceMeasurementPending;
    this.buttonCancelLifetouchPendingHeartBeatTransfer = buttonCancelLifetouchPendingHeartBeatTransfer;
    this.buttonEndSession = buttonEndSession;
    this.buttonTransferSession = buttonTransferSession;
    this.linearLayoutDeviceMeasurementsPending = linearLayoutDeviceMeasurementsPending;
    this.progressBarPendingHeartBeatEndDevice = progressBarPendingHeartBeatEndDevice;
    this.textAreYouSure = textAreYouSure;
    this.textViewDeviceDisconnectionStatus = textViewDeviceDisconnectionStatus;
    this.textViewWarningDevicePendingMeasurement = textViewWarningDevicePendingMeasurement;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EndSessionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EndSessionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.end_session, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EndSessionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.LinearLayoutProgressBarAndTextViewDeviceMeasurementPending;
      LinearLayout LinearLayoutProgressBarAndTextViewDeviceMeasurementPending = ViewBindings.findChildViewById(rootView, id);
      if (LinearLayoutProgressBarAndTextViewDeviceMeasurementPending == null) {
        break missingId;
      }

      id = R.id.buttonCancelLifetouchPendingHeartBeatTransfer;
      Button buttonCancelLifetouchPendingHeartBeatTransfer = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancelLifetouchPendingHeartBeatTransfer == null) {
        break missingId;
      }

      id = R.id.buttonEndSession;
      Button buttonEndSession = ViewBindings.findChildViewById(rootView, id);
      if (buttonEndSession == null) {
        break missingId;
      }

      id = R.id.buttonTransferSession;
      Button buttonTransferSession = ViewBindings.findChildViewById(rootView, id);
      if (buttonTransferSession == null) {
        break missingId;
      }

      id = R.id.linearLayout_deviceMeasurementsPending;
      LinearLayout linearLayoutDeviceMeasurementsPending = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutDeviceMeasurementsPending == null) {
        break missingId;
      }

      id = R.id.progressBarPendingHeartBeatEndDevice;
      ProgressBar progressBarPendingHeartBeatEndDevice = ViewBindings.findChildViewById(rootView, id);
      if (progressBarPendingHeartBeatEndDevice == null) {
        break missingId;
      }

      id = R.id.textAreYouSure;
      TextView textAreYouSure = ViewBindings.findChildViewById(rootView, id);
      if (textAreYouSure == null) {
        break missingId;
      }

      id = R.id.textViewDeviceDisconnectionStatus;
      TextView textViewDeviceDisconnectionStatus = ViewBindings.findChildViewById(rootView, id);
      if (textViewDeviceDisconnectionStatus == null) {
        break missingId;
      }

      id = R.id.textView_warningDevicePendingMeasurement;
      TextView textViewWarningDevicePendingMeasurement = ViewBindings.findChildViewById(rootView, id);
      if (textViewWarningDevicePendingMeasurement == null) {
        break missingId;
      }

      return new EndSessionBinding((LinearLayout) rootView,
          LinearLayoutProgressBarAndTextViewDeviceMeasurementPending,
          buttonCancelLifetouchPendingHeartBeatTransfer, buttonEndSession, buttonTransferSession,
          linearLayoutDeviceMeasurementsPending, progressBarPendingHeartBeatEndDevice,
          textAreYouSure, textViewDeviceDisconnectionStatus,
          textViewWarningDevicePendingMeasurement);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
