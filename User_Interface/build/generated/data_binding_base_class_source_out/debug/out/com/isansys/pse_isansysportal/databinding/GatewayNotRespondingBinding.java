// Generated by view binder compiler. Do not edit!
package com.isansys.pse_isansysportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TableLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.isansys.pse_isansysportal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GatewayNotRespondingBinding implements ViewBinding {
  @NonNull
  private final TableLayout rootView;

  @NonNull
  public final Button buttonRestartGatewayApp;

  @NonNull
  public final TextView textGatewayNotResponding;

  @NonNull
  public final TextView textLastGatewayPingTime;

  @NonNull
  public final TextView textLastGatewayPingWasReceivedAt;

  private GatewayNotRespondingBinding(@NonNull TableLayout rootView,
      @NonNull Button buttonRestartGatewayApp, @NonNull TextView textGatewayNotResponding,
      @NonNull TextView textLastGatewayPingTime,
      @NonNull TextView textLastGatewayPingWasReceivedAt) {
    this.rootView = rootView;
    this.buttonRestartGatewayApp = buttonRestartGatewayApp;
    this.textGatewayNotResponding = textGatewayNotResponding;
    this.textLastGatewayPingTime = textLastGatewayPingTime;
    this.textLastGatewayPingWasReceivedAt = textLastGatewayPingWasReceivedAt;
  }

  @Override
  @NonNull
  public TableLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static GatewayNotRespondingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GatewayNotRespondingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.gateway_not_responding, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GatewayNotRespondingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonRestartGatewayApp;
      Button buttonRestartGatewayApp = ViewBindings.findChildViewById(rootView, id);
      if (buttonRestartGatewayApp == null) {
        break missingId;
      }

      id = R.id.textGatewayNotResponding;
      TextView textGatewayNotResponding = ViewBindings.findChildViewById(rootView, id);
      if (textGatewayNotResponding == null) {
        break missingId;
      }

      id = R.id.textLastGatewayPingTime;
      TextView textLastGatewayPingTime = ViewBindings.findChildViewById(rootView, id);
      if (textLastGatewayPingTime == null) {
        break missingId;
      }

      id = R.id.textLastGatewayPingWasReceivedAt;
      TextView textLastGatewayPingWasReceivedAt = ViewBindings.findChildViewById(rootView, id);
      if (textLastGatewayPingWasReceivedAt == null) {
        break missingId;
      }

      return new GatewayNotRespondingBinding((TableLayout) rootView, buttonRestartGatewayApp,
          textGatewayNotResponding, textLastGatewayPingTime, textLastGatewayPingWasReceivedAt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
