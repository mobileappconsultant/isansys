// Generated by view binder compiler. Do not edit!
package com.isansys.pse_isansysportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.isansys.pse_isansysportal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PopUpWifiStatusBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonWifiPopupDismiss;

  @NonNull
  public final Button buttonWifiReconnect;

  @NonNull
  public final TableRow tableRowIpAddress;

  @NonNull
  public final TextView textViewBSSIDTitle;

  @NonNull
  public final TextView textViewConnectionProblemTitle;

  @NonNull
  public final TextView textViewConnectionStatusTitle;

  @NonNull
  public final TextView textViewIPAddressTitle;

  @NonNull
  public final TextView textViewSSIDTitle;

  @NonNull
  public final TextView textViewSignalLevelTitle;

  @NonNull
  public final TextView textViewWifiBSSID;

  @NonNull
  public final TextView textViewWifiConnectedTitle;

  @NonNull
  public final TextView textViewWifiConnectedToSsid;

  @NonNull
  public final TextView textViewWifiConnectionStatus;

  @NonNull
  public final TextView textViewWifiEnabledStatus;

  @NonNull
  public final TextView textViewWifiEnabledTitle;

  @NonNull
  public final TextView textViewWifiFailureReason;

  @NonNull
  public final TextView textViewWifiIPAddress;

  @NonNull
  public final TextView textViewWifiSSID;

  @NonNull
  public final TextView textViewWifiSignalLevel;

  private PopUpWifiStatusBinding(@NonNull LinearLayout rootView,
      @NonNull Button buttonWifiPopupDismiss, @NonNull Button buttonWifiReconnect,
      @NonNull TableRow tableRowIpAddress, @NonNull TextView textViewBSSIDTitle,
      @NonNull TextView textViewConnectionProblemTitle,
      @NonNull TextView textViewConnectionStatusTitle, @NonNull TextView textViewIPAddressTitle,
      @NonNull TextView textViewSSIDTitle, @NonNull TextView textViewSignalLevelTitle,
      @NonNull TextView textViewWifiBSSID, @NonNull TextView textViewWifiConnectedTitle,
      @NonNull TextView textViewWifiConnectedToSsid, @NonNull TextView textViewWifiConnectionStatus,
      @NonNull TextView textViewWifiEnabledStatus, @NonNull TextView textViewWifiEnabledTitle,
      @NonNull TextView textViewWifiFailureReason, @NonNull TextView textViewWifiIPAddress,
      @NonNull TextView textViewWifiSSID, @NonNull TextView textViewWifiSignalLevel) {
    this.rootView = rootView;
    this.buttonWifiPopupDismiss = buttonWifiPopupDismiss;
    this.buttonWifiReconnect = buttonWifiReconnect;
    this.tableRowIpAddress = tableRowIpAddress;
    this.textViewBSSIDTitle = textViewBSSIDTitle;
    this.textViewConnectionProblemTitle = textViewConnectionProblemTitle;
    this.textViewConnectionStatusTitle = textViewConnectionStatusTitle;
    this.textViewIPAddressTitle = textViewIPAddressTitle;
    this.textViewSSIDTitle = textViewSSIDTitle;
    this.textViewSignalLevelTitle = textViewSignalLevelTitle;
    this.textViewWifiBSSID = textViewWifiBSSID;
    this.textViewWifiConnectedTitle = textViewWifiConnectedTitle;
    this.textViewWifiConnectedToSsid = textViewWifiConnectedToSsid;
    this.textViewWifiConnectionStatus = textViewWifiConnectionStatus;
    this.textViewWifiEnabledStatus = textViewWifiEnabledStatus;
    this.textViewWifiEnabledTitle = textViewWifiEnabledTitle;
    this.textViewWifiFailureReason = textViewWifiFailureReason;
    this.textViewWifiIPAddress = textViewWifiIPAddress;
    this.textViewWifiSSID = textViewWifiSSID;
    this.textViewWifiSignalLevel = textViewWifiSignalLevel;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PopUpWifiStatusBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PopUpWifiStatusBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.pop_up_wifi_status, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PopUpWifiStatusBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_wifi_popup_dismiss;
      Button buttonWifiPopupDismiss = ViewBindings.findChildViewById(rootView, id);
      if (buttonWifiPopupDismiss == null) {
        break missingId;
      }

      id = R.id.button_wifi_reconnect;
      Button buttonWifiReconnect = ViewBindings.findChildViewById(rootView, id);
      if (buttonWifiReconnect == null) {
        break missingId;
      }

      id = R.id.tableRowIpAddress;
      TableRow tableRowIpAddress = ViewBindings.findChildViewById(rootView, id);
      if (tableRowIpAddress == null) {
        break missingId;
      }

      id = R.id.textView_BSSID_title;
      TextView textViewBSSIDTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewBSSIDTitle == null) {
        break missingId;
      }

      id = R.id.textView_connection_problem_title;
      TextView textViewConnectionProblemTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewConnectionProblemTitle == null) {
        break missingId;
      }

      id = R.id.textView_connection_status_title;
      TextView textViewConnectionStatusTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewConnectionStatusTitle == null) {
        break missingId;
      }

      id = R.id.textView_IP_address_title;
      TextView textViewIPAddressTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewIPAddressTitle == null) {
        break missingId;
      }

      id = R.id.textView_SSID_title;
      TextView textViewSSIDTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewSSIDTitle == null) {
        break missingId;
      }

      id = R.id.textView_signal_level_title;
      TextView textViewSignalLevelTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewSignalLevelTitle == null) {
        break missingId;
      }

      id = R.id.textView_wifi_BSSID;
      TextView textViewWifiBSSID = ViewBindings.findChildViewById(rootView, id);
      if (textViewWifiBSSID == null) {
        break missingId;
      }

      id = R.id.textView_wifi_connected_title;
      TextView textViewWifiConnectedTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewWifiConnectedTitle == null) {
        break missingId;
      }

      id = R.id.textView_wifi_connected_to_ssid;
      TextView textViewWifiConnectedToSsid = ViewBindings.findChildViewById(rootView, id);
      if (textViewWifiConnectedToSsid == null) {
        break missingId;
      }

      id = R.id.textView_wifi_connection_status;
      TextView textViewWifiConnectionStatus = ViewBindings.findChildViewById(rootView, id);
      if (textViewWifiConnectionStatus == null) {
        break missingId;
      }

      id = R.id.textView_wifi_enabled_status;
      TextView textViewWifiEnabledStatus = ViewBindings.findChildViewById(rootView, id);
      if (textViewWifiEnabledStatus == null) {
        break missingId;
      }

      id = R.id.textView_wifi_enabled_title;
      TextView textViewWifiEnabledTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewWifiEnabledTitle == null) {
        break missingId;
      }

      id = R.id.textView_wifi_failure_reason;
      TextView textViewWifiFailureReason = ViewBindings.findChildViewById(rootView, id);
      if (textViewWifiFailureReason == null) {
        break missingId;
      }

      id = R.id.textView_wifi_IP_address;
      TextView textViewWifiIPAddress = ViewBindings.findChildViewById(rootView, id);
      if (textViewWifiIPAddress == null) {
        break missingId;
      }

      id = R.id.textView_wifi_SSID;
      TextView textViewWifiSSID = ViewBindings.findChildViewById(rootView, id);
      if (textViewWifiSSID == null) {
        break missingId;
      }

      id = R.id.textView_wifi_signal_level;
      TextView textViewWifiSignalLevel = ViewBindings.findChildViewById(rootView, id);
      if (textViewWifiSignalLevel == null) {
        break missingId;
      }

      return new PopUpWifiStatusBinding((LinearLayout) rootView, buttonWifiPopupDismiss,
          buttonWifiReconnect, tableRowIpAddress, textViewBSSIDTitle,
          textViewConnectionProblemTitle, textViewConnectionStatusTitle, textViewIPAddressTitle,
          textViewSSIDTitle, textViewSignalLevelTitle, textViewWifiBSSID,
          textViewWifiConnectedTitle, textViewWifiConnectedToSsid, textViewWifiConnectionStatus,
          textViewWifiEnabledStatus, textViewWifiEnabledTitle, textViewWifiFailureReason,
          textViewWifiIPAddress, textViewWifiSSID, textViewWifiSignalLevel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
