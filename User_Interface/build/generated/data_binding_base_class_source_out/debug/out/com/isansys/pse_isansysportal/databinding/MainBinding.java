// Generated by view binder compiler. Do not edit!
package com.isansys.pse_isansysportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.isansys.pse_isansysportal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final FrameLayout fragmentFooter;

  @NonNull
  public final FrameLayout fragmentHeader;

  @NonNull
  public final FrameLayout fragmentMain;

  @NonNull
  public final FrameLayout fragmentOverlay;

  @NonNull
  public final RelativeLayout relativeLayoutMain;

  private MainBinding(@NonNull RelativeLayout rootView, @NonNull FrameLayout fragmentFooter,
      @NonNull FrameLayout fragmentHeader, @NonNull FrameLayout fragmentMain,
      @NonNull FrameLayout fragmentOverlay, @NonNull RelativeLayout relativeLayoutMain) {
    this.rootView = rootView;
    this.fragmentFooter = fragmentFooter;
    this.fragmentHeader = fragmentHeader;
    this.fragmentMain = fragmentMain;
    this.fragmentOverlay = fragmentOverlay;
    this.relativeLayoutMain = relativeLayoutMain;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MainBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fragment_footer;
      FrameLayout fragmentFooter = ViewBindings.findChildViewById(rootView, id);
      if (fragmentFooter == null) {
        break missingId;
      }

      id = R.id.fragment_header;
      FrameLayout fragmentHeader = ViewBindings.findChildViewById(rootView, id);
      if (fragmentHeader == null) {
        break missingId;
      }

      id = R.id.fragment_main;
      FrameLayout fragmentMain = ViewBindings.findChildViewById(rootView, id);
      if (fragmentMain == null) {
        break missingId;
      }

      id = R.id.fragment_overlay;
      FrameLayout fragmentOverlay = ViewBindings.findChildViewById(rootView, id);
      if (fragmentOverlay == null) {
        break missingId;
      }

      RelativeLayout relativeLayoutMain = (RelativeLayout) rootView;

      return new MainBinding((RelativeLayout) rootView, fragmentFooter, fragmentHeader,
          fragmentMain, fragmentOverlay, relativeLayoutMain);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
