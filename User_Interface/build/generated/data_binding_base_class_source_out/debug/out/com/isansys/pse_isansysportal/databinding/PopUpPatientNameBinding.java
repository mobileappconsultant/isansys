// Generated by view binder compiler. Do not edit!
package com.isansys.pse_isansysportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.isansys.pse_isansysportal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PopUpPatientNameBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonCorrectPatientDetails;

  @NonNull
  public final Button buttonGoBackToEditing;

  @NonNull
  public final Button buttonIncorrectPatientDetails;

  @NonNull
  public final Button buttonUseCaseId;

  @NonNull
  public final LinearLayout linearLayoutBackAndCaseIdButtons;

  @NonNull
  public final LinearLayout linearLayoutLookupStatus;

  @NonNull
  public final LinearLayout linearLayoutShowPatientDetails;

  @NonNull
  public final ProgressBar serverResponseWaitingProgressBar;

  @NonNull
  public final TextView textViewPatientIdLookupStatus;

  @NonNull
  public final TextView textViewPopupDateOfBirth;

  @NonNull
  public final TextView textViewPopupFirstName;

  @NonNull
  public final TextView textViewPopupGender;

  @NonNull
  public final TextView textViewPopupLastName;

  private PopUpPatientNameBinding(@NonNull LinearLayout rootView,
      @NonNull Button buttonCorrectPatientDetails, @NonNull Button buttonGoBackToEditing,
      @NonNull Button buttonIncorrectPatientDetails, @NonNull Button buttonUseCaseId,
      @NonNull LinearLayout linearLayoutBackAndCaseIdButtons,
      @NonNull LinearLayout linearLayoutLookupStatus,
      @NonNull LinearLayout linearLayoutShowPatientDetails,
      @NonNull ProgressBar serverResponseWaitingProgressBar,
      @NonNull TextView textViewPatientIdLookupStatus, @NonNull TextView textViewPopupDateOfBirth,
      @NonNull TextView textViewPopupFirstName, @NonNull TextView textViewPopupGender,
      @NonNull TextView textViewPopupLastName) {
    this.rootView = rootView;
    this.buttonCorrectPatientDetails = buttonCorrectPatientDetails;
    this.buttonGoBackToEditing = buttonGoBackToEditing;
    this.buttonIncorrectPatientDetails = buttonIncorrectPatientDetails;
    this.buttonUseCaseId = buttonUseCaseId;
    this.linearLayoutBackAndCaseIdButtons = linearLayoutBackAndCaseIdButtons;
    this.linearLayoutLookupStatus = linearLayoutLookupStatus;
    this.linearLayoutShowPatientDetails = linearLayoutShowPatientDetails;
    this.serverResponseWaitingProgressBar = serverResponseWaitingProgressBar;
    this.textViewPatientIdLookupStatus = textViewPatientIdLookupStatus;
    this.textViewPopupDateOfBirth = textViewPopupDateOfBirth;
    this.textViewPopupFirstName = textViewPopupFirstName;
    this.textViewPopupGender = textViewPopupGender;
    this.textViewPopupLastName = textViewPopupLastName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PopUpPatientNameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PopUpPatientNameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.pop_up_patient_name, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PopUpPatientNameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonCorrectPatientDetails;
      Button buttonCorrectPatientDetails = ViewBindings.findChildViewById(rootView, id);
      if (buttonCorrectPatientDetails == null) {
        break missingId;
      }

      id = R.id.buttonGoBackToEditing;
      Button buttonGoBackToEditing = ViewBindings.findChildViewById(rootView, id);
      if (buttonGoBackToEditing == null) {
        break missingId;
      }

      id = R.id.buttonIncorrectPatientDetails;
      Button buttonIncorrectPatientDetails = ViewBindings.findChildViewById(rootView, id);
      if (buttonIncorrectPatientDetails == null) {
        break missingId;
      }

      id = R.id.buttonUseCaseId;
      Button buttonUseCaseId = ViewBindings.findChildViewById(rootView, id);
      if (buttonUseCaseId == null) {
        break missingId;
      }

      id = R.id.linearLayoutBackAndCaseIdButtons;
      LinearLayout linearLayoutBackAndCaseIdButtons = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutBackAndCaseIdButtons == null) {
        break missingId;
      }

      id = R.id.linearLayoutLookupStatus;
      LinearLayout linearLayoutLookupStatus = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutLookupStatus == null) {
        break missingId;
      }

      id = R.id.linearLayoutShowPatientDetails;
      LinearLayout linearLayoutShowPatientDetails = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutShowPatientDetails == null) {
        break missingId;
      }

      id = R.id.serverResponseWaitingProgressBar;
      ProgressBar serverResponseWaitingProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (serverResponseWaitingProgressBar == null) {
        break missingId;
      }

      id = R.id.textViewPatientIdLookupStatus;
      TextView textViewPatientIdLookupStatus = ViewBindings.findChildViewById(rootView, id);
      if (textViewPatientIdLookupStatus == null) {
        break missingId;
      }

      id = R.id.textViewPopupDateOfBirth;
      TextView textViewPopupDateOfBirth = ViewBindings.findChildViewById(rootView, id);
      if (textViewPopupDateOfBirth == null) {
        break missingId;
      }

      id = R.id.textViewPopupFirstName;
      TextView textViewPopupFirstName = ViewBindings.findChildViewById(rootView, id);
      if (textViewPopupFirstName == null) {
        break missingId;
      }

      id = R.id.textViewPopupGender;
      TextView textViewPopupGender = ViewBindings.findChildViewById(rootView, id);
      if (textViewPopupGender == null) {
        break missingId;
      }

      id = R.id.textViewPopupLastName;
      TextView textViewPopupLastName = ViewBindings.findChildViewById(rootView, id);
      if (textViewPopupLastName == null) {
        break missingId;
      }

      return new PopUpPatientNameBinding((LinearLayout) rootView, buttonCorrectPatientDetails,
          buttonGoBackToEditing, buttonIncorrectPatientDetails, buttonUseCaseId,
          linearLayoutBackAndCaseIdButtons, linearLayoutLookupStatus,
          linearLayoutShowPatientDetails, serverResponseWaitingProgressBar,
          textViewPatientIdLookupStatus, textViewPopupDateOfBirth, textViewPopupFirstName,
          textViewPopupGender, textViewPopupLastName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
