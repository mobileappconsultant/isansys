// Generated by view binder compiler. Do not edit!
package com.isansys.pse_isansysportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.isansys.pse_isansysportal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InstallationProgressBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonSetBedDetails;

  @NonNull
  public final Button buttonSetupComplete;

  @NonNull
  public final ImageView imageWizard;

  @NonNull
  public final ProgressBar progressBarGetGatewayConfig;

  @NonNull
  public final ProgressBar progressBarGetServerConfigurableText;

  @NonNull
  public final ProgressBar progressBarGetThresholds;

  @NonNull
  public final ProgressBar progressBarGetUpdatedDeviceFirmware;

  @NonNull
  public final ProgressBar progressBarGetWebPages;

  @NonNull
  public final ProgressBar progressBarGettingWardsAndBeds;

  @NonNull
  public final ProgressBar progressBarNtpTimeSync;

  @NonNull
  public final ProgressBar progressBarRealTimeLinkStatus;

  @NonNull
  public final ProgressBar progressBarServerLinkStatus;

  @NonNull
  public final RelativeLayout relativeLayoutErrorMessage;

  @NonNull
  public final Spinner spinnerBedList;

  @NonNull
  public final Spinner spinnerWardList;

  @NonNull
  public final TableRow tableRowConfirmWardAndBed;

  @NonNull
  public final TableRow tableRowGetGatewayConfig;

  @NonNull
  public final TableRow tableRowGetWebPages;

  @NonNull
  public final TableRow tableRowGettingWardsAndBeds;

  @NonNull
  public final TableRow tableRowNtpTimeSync;

  @NonNull
  public final TableRow tableRowRealTimeLinkTest;

  @NonNull
  public final TableRow tableRowRealTimePort;

  @NonNull
  public final TableRow tableRowSelectBed;

  @NonNull
  public final TableRow tableRowSelectWard;

  @NonNull
  public final TableRow tableRowSelectedWardAndBed;

  @NonNull
  public final TableRow tableRowServerAddress;

  @NonNull
  public final TableRow tableRowServerConfigurableText;

  @NonNull
  public final TableRow tableRowServerLinkTest;

  @NonNull
  public final TableRow tableRowServerPort;

  @NonNull
  public final TableRow tableRowSetupComplete;

  @NonNull
  public final TableRow tableRowThresholds;

  @NonNull
  public final TableRow tableRowUpdatedFirmwareCheck;

  @NonNull
  public final TextView textViewErrorMessage;

  @NonNull
  public final TextView textViewGetGatewayConfig;

  @NonNull
  public final TextView textViewGetServerConfigurableText;

  @NonNull
  public final TextView textViewGetThresholds;

  @NonNull
  public final TextView textViewGetUpdatedDeviceFirmware;

  @NonNull
  public final TextView textViewGetWardsAndBeds;

  @NonNull
  public final TextView textViewGetWebPages;

  @NonNull
  public final TextView textViewNtpTimeSync;

  @NonNull
  public final TextView textViewRealTimeLinkTest;

  @NonNull
  public final TextView textViewRealTimePort;

  @NonNull
  public final TextView textViewRealTimePortLabel;

  @NonNull
  public final TextView textViewSelectBed;

  @NonNull
  public final TextView textViewSelectWard;

  @NonNull
  public final TextView textViewSelectedBed;

  @NonNull
  public final TextView textViewSelectedWard;

  @NonNull
  public final TextView textViewServerAddress;

  @NonNull
  public final TextView textViewServerAddressDescription;

  @NonNull
  public final TextView textViewServerLinkTest;

  @NonNull
  public final TextView textViewServerPort;

  @NonNull
  public final TextView textViewSetBedId;

  @NonNull
  public final TextView textViewSetupComplete;

  @NonNull
  public final View viewGetGatewayConfig;

  @NonNull
  public final View viewGetServerConfigurableText;

  @NonNull
  public final View viewGetThresholds;

  @NonNull
  public final View viewGetUpdatedFirmware;

  @NonNull
  public final View viewGetWebPages;

  @NonNull
  public final View viewGettingWardsAndBeds;

  @NonNull
  public final View viewNtpTimeSync;

  @NonNull
  public final View viewRealTimeLinkStatus;

  @NonNull
  public final View viewServerLinkStatus;

  private InstallationProgressBinding(@NonNull LinearLayout rootView,
      @NonNull Button buttonSetBedDetails, @NonNull Button buttonSetupComplete,
      @NonNull ImageView imageWizard, @NonNull ProgressBar progressBarGetGatewayConfig,
      @NonNull ProgressBar progressBarGetServerConfigurableText,
      @NonNull ProgressBar progressBarGetThresholds,
      @NonNull ProgressBar progressBarGetUpdatedDeviceFirmware,
      @NonNull ProgressBar progressBarGetWebPages,
      @NonNull ProgressBar progressBarGettingWardsAndBeds,
      @NonNull ProgressBar progressBarNtpTimeSync,
      @NonNull ProgressBar progressBarRealTimeLinkStatus,
      @NonNull ProgressBar progressBarServerLinkStatus,
      @NonNull RelativeLayout relativeLayoutErrorMessage, @NonNull Spinner spinnerBedList,
      @NonNull Spinner spinnerWardList, @NonNull TableRow tableRowConfirmWardAndBed,
      @NonNull TableRow tableRowGetGatewayConfig, @NonNull TableRow tableRowGetWebPages,
      @NonNull TableRow tableRowGettingWardsAndBeds, @NonNull TableRow tableRowNtpTimeSync,
      @NonNull TableRow tableRowRealTimeLinkTest, @NonNull TableRow tableRowRealTimePort,
      @NonNull TableRow tableRowSelectBed, @NonNull TableRow tableRowSelectWard,
      @NonNull TableRow tableRowSelectedWardAndBed, @NonNull TableRow tableRowServerAddress,
      @NonNull TableRow tableRowServerConfigurableText, @NonNull TableRow tableRowServerLinkTest,
      @NonNull TableRow tableRowServerPort, @NonNull TableRow tableRowSetupComplete,
      @NonNull TableRow tableRowThresholds, @NonNull TableRow tableRowUpdatedFirmwareCheck,
      @NonNull TextView textViewErrorMessage, @NonNull TextView textViewGetGatewayConfig,
      @NonNull TextView textViewGetServerConfigurableText, @NonNull TextView textViewGetThresholds,
      @NonNull TextView textViewGetUpdatedDeviceFirmware, @NonNull TextView textViewGetWardsAndBeds,
      @NonNull TextView textViewGetWebPages, @NonNull TextView textViewNtpTimeSync,
      @NonNull TextView textViewRealTimeLinkTest, @NonNull TextView textViewRealTimePort,
      @NonNull TextView textViewRealTimePortLabel, @NonNull TextView textViewSelectBed,
      @NonNull TextView textViewSelectWard, @NonNull TextView textViewSelectedBed,
      @NonNull TextView textViewSelectedWard, @NonNull TextView textViewServerAddress,
      @NonNull TextView textViewServerAddressDescription, @NonNull TextView textViewServerLinkTest,
      @NonNull TextView textViewServerPort, @NonNull TextView textViewSetBedId,
      @NonNull TextView textViewSetupComplete, @NonNull View viewGetGatewayConfig,
      @NonNull View viewGetServerConfigurableText, @NonNull View viewGetThresholds,
      @NonNull View viewGetUpdatedFirmware, @NonNull View viewGetWebPages,
      @NonNull View viewGettingWardsAndBeds, @NonNull View viewNtpTimeSync,
      @NonNull View viewRealTimeLinkStatus, @NonNull View viewServerLinkStatus) {
    this.rootView = rootView;
    this.buttonSetBedDetails = buttonSetBedDetails;
    this.buttonSetupComplete = buttonSetupComplete;
    this.imageWizard = imageWizard;
    this.progressBarGetGatewayConfig = progressBarGetGatewayConfig;
    this.progressBarGetServerConfigurableText = progressBarGetServerConfigurableText;
    this.progressBarGetThresholds = progressBarGetThresholds;
    this.progressBarGetUpdatedDeviceFirmware = progressBarGetUpdatedDeviceFirmware;
    this.progressBarGetWebPages = progressBarGetWebPages;
    this.progressBarGettingWardsAndBeds = progressBarGettingWardsAndBeds;
    this.progressBarNtpTimeSync = progressBarNtpTimeSync;
    this.progressBarRealTimeLinkStatus = progressBarRealTimeLinkStatus;
    this.progressBarServerLinkStatus = progressBarServerLinkStatus;
    this.relativeLayoutErrorMessage = relativeLayoutErrorMessage;
    this.spinnerBedList = spinnerBedList;
    this.spinnerWardList = spinnerWardList;
    this.tableRowConfirmWardAndBed = tableRowConfirmWardAndBed;
    this.tableRowGetGatewayConfig = tableRowGetGatewayConfig;
    this.tableRowGetWebPages = tableRowGetWebPages;
    this.tableRowGettingWardsAndBeds = tableRowGettingWardsAndBeds;
    this.tableRowNtpTimeSync = tableRowNtpTimeSync;
    this.tableRowRealTimeLinkTest = tableRowRealTimeLinkTest;
    this.tableRowRealTimePort = tableRowRealTimePort;
    this.tableRowSelectBed = tableRowSelectBed;
    this.tableRowSelectWard = tableRowSelectWard;
    this.tableRowSelectedWardAndBed = tableRowSelectedWardAndBed;
    this.tableRowServerAddress = tableRowServerAddress;
    this.tableRowServerConfigurableText = tableRowServerConfigurableText;
    this.tableRowServerLinkTest = tableRowServerLinkTest;
    this.tableRowServerPort = tableRowServerPort;
    this.tableRowSetupComplete = tableRowSetupComplete;
    this.tableRowThresholds = tableRowThresholds;
    this.tableRowUpdatedFirmwareCheck = tableRowUpdatedFirmwareCheck;
    this.textViewErrorMessage = textViewErrorMessage;
    this.textViewGetGatewayConfig = textViewGetGatewayConfig;
    this.textViewGetServerConfigurableText = textViewGetServerConfigurableText;
    this.textViewGetThresholds = textViewGetThresholds;
    this.textViewGetUpdatedDeviceFirmware = textViewGetUpdatedDeviceFirmware;
    this.textViewGetWardsAndBeds = textViewGetWardsAndBeds;
    this.textViewGetWebPages = textViewGetWebPages;
    this.textViewNtpTimeSync = textViewNtpTimeSync;
    this.textViewRealTimeLinkTest = textViewRealTimeLinkTest;
    this.textViewRealTimePort = textViewRealTimePort;
    this.textViewRealTimePortLabel = textViewRealTimePortLabel;
    this.textViewSelectBed = textViewSelectBed;
    this.textViewSelectWard = textViewSelectWard;
    this.textViewSelectedBed = textViewSelectedBed;
    this.textViewSelectedWard = textViewSelectedWard;
    this.textViewServerAddress = textViewServerAddress;
    this.textViewServerAddressDescription = textViewServerAddressDescription;
    this.textViewServerLinkTest = textViewServerLinkTest;
    this.textViewServerPort = textViewServerPort;
    this.textViewSetBedId = textViewSetBedId;
    this.textViewSetupComplete = textViewSetupComplete;
    this.viewGetGatewayConfig = viewGetGatewayConfig;
    this.viewGetServerConfigurableText = viewGetServerConfigurableText;
    this.viewGetThresholds = viewGetThresholds;
    this.viewGetUpdatedFirmware = viewGetUpdatedFirmware;
    this.viewGetWebPages = viewGetWebPages;
    this.viewGettingWardsAndBeds = viewGettingWardsAndBeds;
    this.viewNtpTimeSync = viewNtpTimeSync;
    this.viewRealTimeLinkStatus = viewRealTimeLinkStatus;
    this.viewServerLinkStatus = viewServerLinkStatus;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static InstallationProgressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InstallationProgressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.installation_progress, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InstallationProgressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSetBedDetails;
      Button buttonSetBedDetails = ViewBindings.findChildViewById(rootView, id);
      if (buttonSetBedDetails == null) {
        break missingId;
      }

      id = R.id.buttonSetupComplete;
      Button buttonSetupComplete = ViewBindings.findChildViewById(rootView, id);
      if (buttonSetupComplete == null) {
        break missingId;
      }

      id = R.id.imageWizard;
      ImageView imageWizard = ViewBindings.findChildViewById(rootView, id);
      if (imageWizard == null) {
        break missingId;
      }

      id = R.id.progressBarGetGatewayConfig;
      ProgressBar progressBarGetGatewayConfig = ViewBindings.findChildViewById(rootView, id);
      if (progressBarGetGatewayConfig == null) {
        break missingId;
      }

      id = R.id.progressBarGetServerConfigurableText;
      ProgressBar progressBarGetServerConfigurableText = ViewBindings.findChildViewById(rootView, id);
      if (progressBarGetServerConfigurableText == null) {
        break missingId;
      }

      id = R.id.progressBarGetThresholds;
      ProgressBar progressBarGetThresholds = ViewBindings.findChildViewById(rootView, id);
      if (progressBarGetThresholds == null) {
        break missingId;
      }

      id = R.id.progressBarGetUpdatedDeviceFirmware;
      ProgressBar progressBarGetUpdatedDeviceFirmware = ViewBindings.findChildViewById(rootView, id);
      if (progressBarGetUpdatedDeviceFirmware == null) {
        break missingId;
      }

      id = R.id.progressBarGetWebPages;
      ProgressBar progressBarGetWebPages = ViewBindings.findChildViewById(rootView, id);
      if (progressBarGetWebPages == null) {
        break missingId;
      }

      id = R.id.progressBarGettingWardsAndBeds;
      ProgressBar progressBarGettingWardsAndBeds = ViewBindings.findChildViewById(rootView, id);
      if (progressBarGettingWardsAndBeds == null) {
        break missingId;
      }

      id = R.id.progressBarNtpTimeSync;
      ProgressBar progressBarNtpTimeSync = ViewBindings.findChildViewById(rootView, id);
      if (progressBarNtpTimeSync == null) {
        break missingId;
      }

      id = R.id.progressBarRealTimeLinkStatus;
      ProgressBar progressBarRealTimeLinkStatus = ViewBindings.findChildViewById(rootView, id);
      if (progressBarRealTimeLinkStatus == null) {
        break missingId;
      }

      id = R.id.progressBarServerLinkStatus;
      ProgressBar progressBarServerLinkStatus = ViewBindings.findChildViewById(rootView, id);
      if (progressBarServerLinkStatus == null) {
        break missingId;
      }

      id = R.id.relativeLayoutErrorMessage;
      RelativeLayout relativeLayoutErrorMessage = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayoutErrorMessage == null) {
        break missingId;
      }

      id = R.id.spinnerBedList;
      Spinner spinnerBedList = ViewBindings.findChildViewById(rootView, id);
      if (spinnerBedList == null) {
        break missingId;
      }

      id = R.id.spinnerWardList;
      Spinner spinnerWardList = ViewBindings.findChildViewById(rootView, id);
      if (spinnerWardList == null) {
        break missingId;
      }

      id = R.id.tableRowConfirmWardAndBed;
      TableRow tableRowConfirmWardAndBed = ViewBindings.findChildViewById(rootView, id);
      if (tableRowConfirmWardAndBed == null) {
        break missingId;
      }

      id = R.id.tableRowGetGatewayConfig;
      TableRow tableRowGetGatewayConfig = ViewBindings.findChildViewById(rootView, id);
      if (tableRowGetGatewayConfig == null) {
        break missingId;
      }

      id = R.id.tableRowGetWebPages;
      TableRow tableRowGetWebPages = ViewBindings.findChildViewById(rootView, id);
      if (tableRowGetWebPages == null) {
        break missingId;
      }

      id = R.id.tableRowGettingWardsAndBeds;
      TableRow tableRowGettingWardsAndBeds = ViewBindings.findChildViewById(rootView, id);
      if (tableRowGettingWardsAndBeds == null) {
        break missingId;
      }

      id = R.id.tableRowNtpTimeSync;
      TableRow tableRowNtpTimeSync = ViewBindings.findChildViewById(rootView, id);
      if (tableRowNtpTimeSync == null) {
        break missingId;
      }

      id = R.id.tableRowRealTimeLinkTest;
      TableRow tableRowRealTimeLinkTest = ViewBindings.findChildViewById(rootView, id);
      if (tableRowRealTimeLinkTest == null) {
        break missingId;
      }

      id = R.id.tableRowRealTimePort;
      TableRow tableRowRealTimePort = ViewBindings.findChildViewById(rootView, id);
      if (tableRowRealTimePort == null) {
        break missingId;
      }

      id = R.id.tableRowSelectBed;
      TableRow tableRowSelectBed = ViewBindings.findChildViewById(rootView, id);
      if (tableRowSelectBed == null) {
        break missingId;
      }

      id = R.id.tableRowSelectWard;
      TableRow tableRowSelectWard = ViewBindings.findChildViewById(rootView, id);
      if (tableRowSelectWard == null) {
        break missingId;
      }

      id = R.id.tableRowSelectedWardAndBed;
      TableRow tableRowSelectedWardAndBed = ViewBindings.findChildViewById(rootView, id);
      if (tableRowSelectedWardAndBed == null) {
        break missingId;
      }

      id = R.id.tableRowServerAddress;
      TableRow tableRowServerAddress = ViewBindings.findChildViewById(rootView, id);
      if (tableRowServerAddress == null) {
        break missingId;
      }

      id = R.id.tableRowServerConfigurableText;
      TableRow tableRowServerConfigurableText = ViewBindings.findChildViewById(rootView, id);
      if (tableRowServerConfigurableText == null) {
        break missingId;
      }

      id = R.id.tableRowServerLinkTest;
      TableRow tableRowServerLinkTest = ViewBindings.findChildViewById(rootView, id);
      if (tableRowServerLinkTest == null) {
        break missingId;
      }

      id = R.id.tableRowServerPort;
      TableRow tableRowServerPort = ViewBindings.findChildViewById(rootView, id);
      if (tableRowServerPort == null) {
        break missingId;
      }

      id = R.id.tableRowSetupComplete;
      TableRow tableRowSetupComplete = ViewBindings.findChildViewById(rootView, id);
      if (tableRowSetupComplete == null) {
        break missingId;
      }

      id = R.id.tableRowThresholds;
      TableRow tableRowThresholds = ViewBindings.findChildViewById(rootView, id);
      if (tableRowThresholds == null) {
        break missingId;
      }

      id = R.id.tableRowUpdatedFirmwareCheck;
      TableRow tableRowUpdatedFirmwareCheck = ViewBindings.findChildViewById(rootView, id);
      if (tableRowUpdatedFirmwareCheck == null) {
        break missingId;
      }

      id = R.id.textViewErrorMessage;
      TextView textViewErrorMessage = ViewBindings.findChildViewById(rootView, id);
      if (textViewErrorMessage == null) {
        break missingId;
      }

      id = R.id.textViewGetGatewayConfig;
      TextView textViewGetGatewayConfig = ViewBindings.findChildViewById(rootView, id);
      if (textViewGetGatewayConfig == null) {
        break missingId;
      }

      id = R.id.textViewGetServerConfigurableText;
      TextView textViewGetServerConfigurableText = ViewBindings.findChildViewById(rootView, id);
      if (textViewGetServerConfigurableText == null) {
        break missingId;
      }

      id = R.id.textViewGetThresholds;
      TextView textViewGetThresholds = ViewBindings.findChildViewById(rootView, id);
      if (textViewGetThresholds == null) {
        break missingId;
      }

      id = R.id.textViewGetUpdatedDeviceFirmware;
      TextView textViewGetUpdatedDeviceFirmware = ViewBindings.findChildViewById(rootView, id);
      if (textViewGetUpdatedDeviceFirmware == null) {
        break missingId;
      }

      id = R.id.textViewGetWardsAndBeds;
      TextView textViewGetWardsAndBeds = ViewBindings.findChildViewById(rootView, id);
      if (textViewGetWardsAndBeds == null) {
        break missingId;
      }

      id = R.id.textViewGetWebPages;
      TextView textViewGetWebPages = ViewBindings.findChildViewById(rootView, id);
      if (textViewGetWebPages == null) {
        break missingId;
      }

      id = R.id.textViewNtpTimeSync;
      TextView textViewNtpTimeSync = ViewBindings.findChildViewById(rootView, id);
      if (textViewNtpTimeSync == null) {
        break missingId;
      }

      id = R.id.textViewRealTimeLinkTest;
      TextView textViewRealTimeLinkTest = ViewBindings.findChildViewById(rootView, id);
      if (textViewRealTimeLinkTest == null) {
        break missingId;
      }

      id = R.id.textViewRealTimePort;
      TextView textViewRealTimePort = ViewBindings.findChildViewById(rootView, id);
      if (textViewRealTimePort == null) {
        break missingId;
      }

      id = R.id.textViewRealTimePortLabel;
      TextView textViewRealTimePortLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewRealTimePortLabel == null) {
        break missingId;
      }

      id = R.id.textViewSelectBed;
      TextView textViewSelectBed = ViewBindings.findChildViewById(rootView, id);
      if (textViewSelectBed == null) {
        break missingId;
      }

      id = R.id.textViewSelectWard;
      TextView textViewSelectWard = ViewBindings.findChildViewById(rootView, id);
      if (textViewSelectWard == null) {
        break missingId;
      }

      id = R.id.textViewSelectedBed;
      TextView textViewSelectedBed = ViewBindings.findChildViewById(rootView, id);
      if (textViewSelectedBed == null) {
        break missingId;
      }

      id = R.id.textViewSelectedWard;
      TextView textViewSelectedWard = ViewBindings.findChildViewById(rootView, id);
      if (textViewSelectedWard == null) {
        break missingId;
      }

      id = R.id.textViewServerAddress;
      TextView textViewServerAddress = ViewBindings.findChildViewById(rootView, id);
      if (textViewServerAddress == null) {
        break missingId;
      }

      id = R.id.textViewServerAddressDescription;
      TextView textViewServerAddressDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewServerAddressDescription == null) {
        break missingId;
      }

      id = R.id.textViewServerLinkTest;
      TextView textViewServerLinkTest = ViewBindings.findChildViewById(rootView, id);
      if (textViewServerLinkTest == null) {
        break missingId;
      }

      id = R.id.textViewServerPort;
      TextView textViewServerPort = ViewBindings.findChildViewById(rootView, id);
      if (textViewServerPort == null) {
        break missingId;
      }

      id = R.id.textViewSetBedId;
      TextView textViewSetBedId = ViewBindings.findChildViewById(rootView, id);
      if (textViewSetBedId == null) {
        break missingId;
      }

      id = R.id.textViewSetupComplete;
      TextView textViewSetupComplete = ViewBindings.findChildViewById(rootView, id);
      if (textViewSetupComplete == null) {
        break missingId;
      }

      id = R.id.viewGetGatewayConfig;
      View viewGetGatewayConfig = ViewBindings.findChildViewById(rootView, id);
      if (viewGetGatewayConfig == null) {
        break missingId;
      }

      id = R.id.viewGetServerConfigurableText;
      View viewGetServerConfigurableText = ViewBindings.findChildViewById(rootView, id);
      if (viewGetServerConfigurableText == null) {
        break missingId;
      }

      id = R.id.viewGetThresholds;
      View viewGetThresholds = ViewBindings.findChildViewById(rootView, id);
      if (viewGetThresholds == null) {
        break missingId;
      }

      id = R.id.viewGetUpdatedFirmware;
      View viewGetUpdatedFirmware = ViewBindings.findChildViewById(rootView, id);
      if (viewGetUpdatedFirmware == null) {
        break missingId;
      }

      id = R.id.viewGetWebPages;
      View viewGetWebPages = ViewBindings.findChildViewById(rootView, id);
      if (viewGetWebPages == null) {
        break missingId;
      }

      id = R.id.viewGettingWardsAndBeds;
      View viewGettingWardsAndBeds = ViewBindings.findChildViewById(rootView, id);
      if (viewGettingWardsAndBeds == null) {
        break missingId;
      }

      id = R.id.viewNtpTimeSync;
      View viewNtpTimeSync = ViewBindings.findChildViewById(rootView, id);
      if (viewNtpTimeSync == null) {
        break missingId;
      }

      id = R.id.viewRealTimeLinkStatus;
      View viewRealTimeLinkStatus = ViewBindings.findChildViewById(rootView, id);
      if (viewRealTimeLinkStatus == null) {
        break missingId;
      }

      id = R.id.viewServerLinkStatus;
      View viewServerLinkStatus = ViewBindings.findChildViewById(rootView, id);
      if (viewServerLinkStatus == null) {
        break missingId;
      }

      return new InstallationProgressBinding((LinearLayout) rootView, buttonSetBedDetails,
          buttonSetupComplete, imageWizard, progressBarGetGatewayConfig,
          progressBarGetServerConfigurableText, progressBarGetThresholds,
          progressBarGetUpdatedDeviceFirmware, progressBarGetWebPages,
          progressBarGettingWardsAndBeds, progressBarNtpTimeSync, progressBarRealTimeLinkStatus,
          progressBarServerLinkStatus, relativeLayoutErrorMessage, spinnerBedList, spinnerWardList,
          tableRowConfirmWardAndBed, tableRowGetGatewayConfig, tableRowGetWebPages,
          tableRowGettingWardsAndBeds, tableRowNtpTimeSync, tableRowRealTimeLinkTest,
          tableRowRealTimePort, tableRowSelectBed, tableRowSelectWard, tableRowSelectedWardAndBed,
          tableRowServerAddress, tableRowServerConfigurableText, tableRowServerLinkTest,
          tableRowServerPort, tableRowSetupComplete, tableRowThresholds,
          tableRowUpdatedFirmwareCheck, textViewErrorMessage, textViewGetGatewayConfig,
          textViewGetServerConfigurableText, textViewGetThresholds,
          textViewGetUpdatedDeviceFirmware, textViewGetWardsAndBeds, textViewGetWebPages,
          textViewNtpTimeSync, textViewRealTimeLinkTest, textViewRealTimePort,
          textViewRealTimePortLabel, textViewSelectBed, textViewSelectWard, textViewSelectedBed,
          textViewSelectedWard, textViewServerAddress, textViewServerAddressDescription,
          textViewServerLinkTest, textViewServerPort, textViewSetBedId, textViewSetupComplete,
          viewGetGatewayConfig, viewGetServerConfigurableText, viewGetThresholds,
          viewGetUpdatedFirmware, viewGetWebPages, viewGettingWardsAndBeds, viewNtpTimeSync,
          viewRealTimeLinkStatus, viewServerLinkStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
