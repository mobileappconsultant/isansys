// Generated by view binder compiler. Do not edit!
package com.isansys.pse_isansysportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.isansys.pse_isansysportal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdminModeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button adminExitButton;

  @NonNull
  public final Button buttonAdminTabGatewaySettings;

  @NonNull
  public final Button buttonAdminTabServerConnectionSettings;

  @NonNull
  public final FrameLayout fragmentAdminPage;

  @NonNull
  public final View indicatorAdminTabGatewaySettings;

  @NonNull
  public final View indicatorAdminTabServerConnectionSettings;

  @NonNull
  public final TextView labelAndroidVersion;

  @NonNull
  public final TextView labelGatewayGTIN;

  @NonNull
  public final TextView labelGatewayName;

  @NonNull
  public final TextView labelGatewayNonCeModeStatement;

  @NonNull
  public final TextView labelPatientGatewaySoftwareVersion;

  @NonNull
  public final TextView labelUserInterfaceSoftwareVersion;

  @NonNull
  public final TextView textAndroidVersion;

  @NonNull
  public final TextView textGatewayName;

  @NonNull
  public final TextView textPatientGatewaySoftwareVersion;

  @NonNull
  public final TextView textUserInterfaceSoftwareVersion;

  private AdminModeBinding(@NonNull LinearLayout rootView, @NonNull Button adminExitButton,
      @NonNull Button buttonAdminTabGatewaySettings,
      @NonNull Button buttonAdminTabServerConnectionSettings,
      @NonNull FrameLayout fragmentAdminPage, @NonNull View indicatorAdminTabGatewaySettings,
      @NonNull View indicatorAdminTabServerConnectionSettings,
      @NonNull TextView labelAndroidVersion, @NonNull TextView labelGatewayGTIN,
      @NonNull TextView labelGatewayName, @NonNull TextView labelGatewayNonCeModeStatement,
      @NonNull TextView labelPatientGatewaySoftwareVersion,
      @NonNull TextView labelUserInterfaceSoftwareVersion, @NonNull TextView textAndroidVersion,
      @NonNull TextView textGatewayName, @NonNull TextView textPatientGatewaySoftwareVersion,
      @NonNull TextView textUserInterfaceSoftwareVersion) {
    this.rootView = rootView;
    this.adminExitButton = adminExitButton;
    this.buttonAdminTabGatewaySettings = buttonAdminTabGatewaySettings;
    this.buttonAdminTabServerConnectionSettings = buttonAdminTabServerConnectionSettings;
    this.fragmentAdminPage = fragmentAdminPage;
    this.indicatorAdminTabGatewaySettings = indicatorAdminTabGatewaySettings;
    this.indicatorAdminTabServerConnectionSettings = indicatorAdminTabServerConnectionSettings;
    this.labelAndroidVersion = labelAndroidVersion;
    this.labelGatewayGTIN = labelGatewayGTIN;
    this.labelGatewayName = labelGatewayName;
    this.labelGatewayNonCeModeStatement = labelGatewayNonCeModeStatement;
    this.labelPatientGatewaySoftwareVersion = labelPatientGatewaySoftwareVersion;
    this.labelUserInterfaceSoftwareVersion = labelUserInterfaceSoftwareVersion;
    this.textAndroidVersion = textAndroidVersion;
    this.textGatewayName = textGatewayName;
    this.textPatientGatewaySoftwareVersion = textPatientGatewaySoftwareVersion;
    this.textUserInterfaceSoftwareVersion = textUserInterfaceSoftwareVersion;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdminModeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdminModeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.admin_mode, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdminModeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adminExitButton;
      Button adminExitButton = ViewBindings.findChildViewById(rootView, id);
      if (adminExitButton == null) {
        break missingId;
      }

      id = R.id.buttonAdminTabGatewaySettings;
      Button buttonAdminTabGatewaySettings = ViewBindings.findChildViewById(rootView, id);
      if (buttonAdminTabGatewaySettings == null) {
        break missingId;
      }

      id = R.id.buttonAdminTabServerConnectionSettings;
      Button buttonAdminTabServerConnectionSettings = ViewBindings.findChildViewById(rootView, id);
      if (buttonAdminTabServerConnectionSettings == null) {
        break missingId;
      }

      id = R.id.fragment_admin_page;
      FrameLayout fragmentAdminPage = ViewBindings.findChildViewById(rootView, id);
      if (fragmentAdminPage == null) {
        break missingId;
      }

      id = R.id.indicatorAdminTabGatewaySettings;
      View indicatorAdminTabGatewaySettings = ViewBindings.findChildViewById(rootView, id);
      if (indicatorAdminTabGatewaySettings == null) {
        break missingId;
      }

      id = R.id.indicatorAdminTabServerConnectionSettings;
      View indicatorAdminTabServerConnectionSettings = ViewBindings.findChildViewById(rootView, id);
      if (indicatorAdminTabServerConnectionSettings == null) {
        break missingId;
      }

      id = R.id.labelAndroidVersion;
      TextView labelAndroidVersion = ViewBindings.findChildViewById(rootView, id);
      if (labelAndroidVersion == null) {
        break missingId;
      }

      id = R.id.labelGatewayGTIN;
      TextView labelGatewayGTIN = ViewBindings.findChildViewById(rootView, id);
      if (labelGatewayGTIN == null) {
        break missingId;
      }

      id = R.id.labelGatewayName;
      TextView labelGatewayName = ViewBindings.findChildViewById(rootView, id);
      if (labelGatewayName == null) {
        break missingId;
      }

      id = R.id.labelGatewayNonCeModeStatement;
      TextView labelGatewayNonCeModeStatement = ViewBindings.findChildViewById(rootView, id);
      if (labelGatewayNonCeModeStatement == null) {
        break missingId;
      }

      id = R.id.labelPatientGatewaySoftwareVersion;
      TextView labelPatientGatewaySoftwareVersion = ViewBindings.findChildViewById(rootView, id);
      if (labelPatientGatewaySoftwareVersion == null) {
        break missingId;
      }

      id = R.id.labelUserInterfaceSoftwareVersion;
      TextView labelUserInterfaceSoftwareVersion = ViewBindings.findChildViewById(rootView, id);
      if (labelUserInterfaceSoftwareVersion == null) {
        break missingId;
      }

      id = R.id.textAndroidVersion;
      TextView textAndroidVersion = ViewBindings.findChildViewById(rootView, id);
      if (textAndroidVersion == null) {
        break missingId;
      }

      id = R.id.textGatewayName;
      TextView textGatewayName = ViewBindings.findChildViewById(rootView, id);
      if (textGatewayName == null) {
        break missingId;
      }

      id = R.id.textPatientGatewaySoftwareVersion;
      TextView textPatientGatewaySoftwareVersion = ViewBindings.findChildViewById(rootView, id);
      if (textPatientGatewaySoftwareVersion == null) {
        break missingId;
      }

      id = R.id.textUserInterfaceSoftwareVersion;
      TextView textUserInterfaceSoftwareVersion = ViewBindings.findChildViewById(rootView, id);
      if (textUserInterfaceSoftwareVersion == null) {
        break missingId;
      }

      return new AdminModeBinding((LinearLayout) rootView, adminExitButton,
          buttonAdminTabGatewaySettings, buttonAdminTabServerConnectionSettings, fragmentAdminPage,
          indicatorAdminTabGatewaySettings, indicatorAdminTabServerConnectionSettings,
          labelAndroidVersion, labelGatewayGTIN, labelGatewayName, labelGatewayNonCeModeStatement,
          labelPatientGatewaySoftwareVersion, labelUserInterfaceSoftwareVersion, textAndroidVersion,
          textGatewayName, textPatientGatewaySoftwareVersion, textUserInterfaceSoftwareVersion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
