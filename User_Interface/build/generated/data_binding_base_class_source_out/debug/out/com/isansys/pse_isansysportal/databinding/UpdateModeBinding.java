// Generated by view binder compiler. Do not edit!
package com.isansys.pse_isansysportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TableLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.isansys.pse_isansysportal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UpdateModeBinding implements ViewBinding {
  @NonNull
  private final TableLayout rootView;

  @NonNull
  public final Button buttonInstallGatewayApk;

  @NonNull
  public final Button buttonInstallUserInterfaceApk;

  @NonNull
  public final Button buttonUpdatesComplete;

  @NonNull
  public final TextView gatewayArrow;

  @NonNull
  public final TextView labelPatientGateway;

  @NonNull
  public final TextView labelUserInterface;

  @NonNull
  public final TextView textAvailablePatientGatewayVersion;

  @NonNull
  public final TextView textAvailableUserInterfaceVersion;

  @NonNull
  public final TextView textCurrentPatientGatewaySoftwareVersion;

  @NonNull
  public final TextView textCurrentUserInterfaceSoftwareVersion;

  @NonNull
  public final TextView textSoftwareUpdatesInProgress;

  @NonNull
  public final TextView uiArrow;

  @NonNull
  public final View viewGatewayInstallDone;

  @NonNull
  public final View viewUserInterfaceInstallDone;

  private UpdateModeBinding(@NonNull TableLayout rootView, @NonNull Button buttonInstallGatewayApk,
      @NonNull Button buttonInstallUserInterfaceApk, @NonNull Button buttonUpdatesComplete,
      @NonNull TextView gatewayArrow, @NonNull TextView labelPatientGateway,
      @NonNull TextView labelUserInterface, @NonNull TextView textAvailablePatientGatewayVersion,
      @NonNull TextView textAvailableUserInterfaceVersion,
      @NonNull TextView textCurrentPatientGatewaySoftwareVersion,
      @NonNull TextView textCurrentUserInterfaceSoftwareVersion,
      @NonNull TextView textSoftwareUpdatesInProgress, @NonNull TextView uiArrow,
      @NonNull View viewGatewayInstallDone, @NonNull View viewUserInterfaceInstallDone) {
    this.rootView = rootView;
    this.buttonInstallGatewayApk = buttonInstallGatewayApk;
    this.buttonInstallUserInterfaceApk = buttonInstallUserInterfaceApk;
    this.buttonUpdatesComplete = buttonUpdatesComplete;
    this.gatewayArrow = gatewayArrow;
    this.labelPatientGateway = labelPatientGateway;
    this.labelUserInterface = labelUserInterface;
    this.textAvailablePatientGatewayVersion = textAvailablePatientGatewayVersion;
    this.textAvailableUserInterfaceVersion = textAvailableUserInterfaceVersion;
    this.textCurrentPatientGatewaySoftwareVersion = textCurrentPatientGatewaySoftwareVersion;
    this.textCurrentUserInterfaceSoftwareVersion = textCurrentUserInterfaceSoftwareVersion;
    this.textSoftwareUpdatesInProgress = textSoftwareUpdatesInProgress;
    this.uiArrow = uiArrow;
    this.viewGatewayInstallDone = viewGatewayInstallDone;
    this.viewUserInterfaceInstallDone = viewUserInterfaceInstallDone;
  }

  @Override
  @NonNull
  public TableLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UpdateModeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UpdateModeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.update_mode, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UpdateModeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonInstallGatewayApk;
      Button buttonInstallGatewayApk = ViewBindings.findChildViewById(rootView, id);
      if (buttonInstallGatewayApk == null) {
        break missingId;
      }

      id = R.id.buttonInstallUserInterfaceApk;
      Button buttonInstallUserInterfaceApk = ViewBindings.findChildViewById(rootView, id);
      if (buttonInstallUserInterfaceApk == null) {
        break missingId;
      }

      id = R.id.buttonUpdatesComplete;
      Button buttonUpdatesComplete = ViewBindings.findChildViewById(rootView, id);
      if (buttonUpdatesComplete == null) {
        break missingId;
      }

      id = R.id.gatewayArrow;
      TextView gatewayArrow = ViewBindings.findChildViewById(rootView, id);
      if (gatewayArrow == null) {
        break missingId;
      }

      id = R.id.labelPatientGateway;
      TextView labelPatientGateway = ViewBindings.findChildViewById(rootView, id);
      if (labelPatientGateway == null) {
        break missingId;
      }

      id = R.id.labelUserInterface;
      TextView labelUserInterface = ViewBindings.findChildViewById(rootView, id);
      if (labelUserInterface == null) {
        break missingId;
      }

      id = R.id.textAvailablePatientGatewayVersion;
      TextView textAvailablePatientGatewayVersion = ViewBindings.findChildViewById(rootView, id);
      if (textAvailablePatientGatewayVersion == null) {
        break missingId;
      }

      id = R.id.textAvailableUserInterfaceVersion;
      TextView textAvailableUserInterfaceVersion = ViewBindings.findChildViewById(rootView, id);
      if (textAvailableUserInterfaceVersion == null) {
        break missingId;
      }

      id = R.id.textCurrentPatientGatewaySoftwareVersion;
      TextView textCurrentPatientGatewaySoftwareVersion = ViewBindings.findChildViewById(rootView, id);
      if (textCurrentPatientGatewaySoftwareVersion == null) {
        break missingId;
      }

      id = R.id.textCurrentUserInterfaceSoftwareVersion;
      TextView textCurrentUserInterfaceSoftwareVersion = ViewBindings.findChildViewById(rootView, id);
      if (textCurrentUserInterfaceSoftwareVersion == null) {
        break missingId;
      }

      id = R.id.textSoftwareUpdatesInProgress;
      TextView textSoftwareUpdatesInProgress = ViewBindings.findChildViewById(rootView, id);
      if (textSoftwareUpdatesInProgress == null) {
        break missingId;
      }

      id = R.id.uiArrow;
      TextView uiArrow = ViewBindings.findChildViewById(rootView, id);
      if (uiArrow == null) {
        break missingId;
      }

      id = R.id.viewGatewayInstallDone;
      View viewGatewayInstallDone = ViewBindings.findChildViewById(rootView, id);
      if (viewGatewayInstallDone == null) {
        break missingId;
      }

      id = R.id.viewUserInterfaceInstallDone;
      View viewUserInterfaceInstallDone = ViewBindings.findChildViewById(rootView, id);
      if (viewUserInterfaceInstallDone == null) {
        break missingId;
      }

      return new UpdateModeBinding((TableLayout) rootView, buttonInstallGatewayApk,
          buttonInstallUserInterfaceApk, buttonUpdatesComplete, gatewayArrow, labelPatientGateway,
          labelUserInterface, textAvailablePatientGatewayVersion, textAvailableUserInterfaceVersion,
          textCurrentPatientGatewaySoftwareVersion, textCurrentUserInterfaceSoftwareVersion,
          textSoftwareUpdatesInProgress, uiArrow, viewGatewayInstallDone,
          viewUserInterfaceInstallDone);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
