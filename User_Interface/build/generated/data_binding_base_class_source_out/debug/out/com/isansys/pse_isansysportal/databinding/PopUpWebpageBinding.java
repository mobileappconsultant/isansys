// Generated by view binder compiler. Do not edit!
package com.isansys.pse_isansysportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.isansys.pse_isansysportal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PopUpWebpageBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonPopupWebpageDismiss;

  @NonNull
  public final Button buttonPopupWebpageDismissSmall;

  @NonNull
  public final ImageButton imageButtonBack;

  @NonNull
  public final ImageButton imageButtonForward;

  @NonNull
  public final ImageButton imageButtonReload;

  @NonNull
  public final ImageView imageViewError;

  @NonNull
  public final LinearLayout linearLayoutErrorLoadingWebpage;

  @NonNull
  public final LinearLayout linearLayoutLoadingWebpage;

  @NonNull
  public final LinearLayout linearLayoutPopupIncomingVideoCall;

  @NonNull
  public final LinearLayout linearLayoutWebpageBottomButtons;

  @NonNull
  public final ProgressBar progressBarLoading;

  @NonNull
  public final TextView textViewProblemLoadingWebpage;

  @NonNull
  public final TextView textViewProblemLoadingWebpageError;

  @NonNull
  public final WebView webView;

  private PopUpWebpageBinding(@NonNull LinearLayout rootView,
      @NonNull Button buttonPopupWebpageDismiss, @NonNull Button buttonPopupWebpageDismissSmall,
      @NonNull ImageButton imageButtonBack, @NonNull ImageButton imageButtonForward,
      @NonNull ImageButton imageButtonReload, @NonNull ImageView imageViewError,
      @NonNull LinearLayout linearLayoutErrorLoadingWebpage,
      @NonNull LinearLayout linearLayoutLoadingWebpage,
      @NonNull LinearLayout linearLayoutPopupIncomingVideoCall,
      @NonNull LinearLayout linearLayoutWebpageBottomButtons,
      @NonNull ProgressBar progressBarLoading, @NonNull TextView textViewProblemLoadingWebpage,
      @NonNull TextView textViewProblemLoadingWebpageError, @NonNull WebView webView) {
    this.rootView = rootView;
    this.buttonPopupWebpageDismiss = buttonPopupWebpageDismiss;
    this.buttonPopupWebpageDismissSmall = buttonPopupWebpageDismissSmall;
    this.imageButtonBack = imageButtonBack;
    this.imageButtonForward = imageButtonForward;
    this.imageButtonReload = imageButtonReload;
    this.imageViewError = imageViewError;
    this.linearLayoutErrorLoadingWebpage = linearLayoutErrorLoadingWebpage;
    this.linearLayoutLoadingWebpage = linearLayoutLoadingWebpage;
    this.linearLayoutPopupIncomingVideoCall = linearLayoutPopupIncomingVideoCall;
    this.linearLayoutWebpageBottomButtons = linearLayoutWebpageBottomButtons;
    this.progressBarLoading = progressBarLoading;
    this.textViewProblemLoadingWebpage = textViewProblemLoadingWebpage;
    this.textViewProblemLoadingWebpageError = textViewProblemLoadingWebpageError;
    this.webView = webView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PopUpWebpageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PopUpWebpageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.pop_up_webpage, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PopUpWebpageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonPopupWebpageDismiss;
      Button buttonPopupWebpageDismiss = ViewBindings.findChildViewById(rootView, id);
      if (buttonPopupWebpageDismiss == null) {
        break missingId;
      }

      id = R.id.buttonPopupWebpageDismissSmall;
      Button buttonPopupWebpageDismissSmall = ViewBindings.findChildViewById(rootView, id);
      if (buttonPopupWebpageDismissSmall == null) {
        break missingId;
      }

      id = R.id.imageButtonBack;
      ImageButton imageButtonBack = ViewBindings.findChildViewById(rootView, id);
      if (imageButtonBack == null) {
        break missingId;
      }

      id = R.id.imageButtonForward;
      ImageButton imageButtonForward = ViewBindings.findChildViewById(rootView, id);
      if (imageButtonForward == null) {
        break missingId;
      }

      id = R.id.imageButtonReload;
      ImageButton imageButtonReload = ViewBindings.findChildViewById(rootView, id);
      if (imageButtonReload == null) {
        break missingId;
      }

      id = R.id.imageViewError;
      ImageView imageViewError = ViewBindings.findChildViewById(rootView, id);
      if (imageViewError == null) {
        break missingId;
      }

      id = R.id.linearLayoutErrorLoadingWebpage;
      LinearLayout linearLayoutErrorLoadingWebpage = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutErrorLoadingWebpage == null) {
        break missingId;
      }

      id = R.id.linearLayoutLoadingWebpage;
      LinearLayout linearLayoutLoadingWebpage = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutLoadingWebpage == null) {
        break missingId;
      }

      LinearLayout linearLayoutPopupIncomingVideoCall = (LinearLayout) rootView;

      id = R.id.linearLayoutWebpageBottomButtons;
      LinearLayout linearLayoutWebpageBottomButtons = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutWebpageBottomButtons == null) {
        break missingId;
      }

      id = R.id.progressBarLoading;
      ProgressBar progressBarLoading = ViewBindings.findChildViewById(rootView, id);
      if (progressBarLoading == null) {
        break missingId;
      }

      id = R.id.textViewProblemLoadingWebpage;
      TextView textViewProblemLoadingWebpage = ViewBindings.findChildViewById(rootView, id);
      if (textViewProblemLoadingWebpage == null) {
        break missingId;
      }

      id = R.id.textViewProblemLoadingWebpageError;
      TextView textViewProblemLoadingWebpageError = ViewBindings.findChildViewById(rootView, id);
      if (textViewProblemLoadingWebpageError == null) {
        break missingId;
      }

      id = R.id.webView;
      WebView webView = ViewBindings.findChildViewById(rootView, id);
      if (webView == null) {
        break missingId;
      }

      return new PopUpWebpageBinding((LinearLayout) rootView, buttonPopupWebpageDismiss,
          buttonPopupWebpageDismissSmall, imageButtonBack, imageButtonForward, imageButtonReload,
          imageViewError, linearLayoutErrorLoadingWebpage, linearLayoutLoadingWebpage,
          linearLayoutPopupIncomingVideoCall, linearLayoutWebpageBottomButtons, progressBarLoading,
          textViewProblemLoadingWebpage, textViewProblemLoadingWebpageError, webView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
